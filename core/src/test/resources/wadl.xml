<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ns2:application xmlns:ns2="http://wadl.dev.java.net/2009/02"><ns2:doc xmlns:jersey="http://jersey.java.net/" jersey:generatedBy="Jersey: 1.16 11/28/2012 03:18 PM"/><ns2:grammars><ns2:include href="application.wadl/xsd0.xsd"><ns2:doc title="Generated" xml:lang="en"/></ns2:include></ns2:grammars><ns2:resources base="http://localhost:8080/pentaho/api/"><ns2:resource path="/users"><ns2:doc>This service allows for listing system users in the BA Platform.</ns2:doc><ns2:method id="getUsers" name="GET"><ns2:response><ns2:representation mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/repos"><ns2:doc>The RepositoryResource service retrieves the repository files through various methods.  Allows you to execute repository content.</ns2:doc><ns2:resource path="/{contextId}/{resourceId : .+}"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="contextId" style="template" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="resourceId" style="template" type="xs:string"/><ns2:method id="doGet" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Gets a resource identified by the compound key contextId and resourceId. This request may include additional parameters used to render the resource.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repos/admin-plugin/resources/authenticationProviderModule/authenticationProviderAdmin.html
 &lt;/p&gt;

 @param contextId  Identifies the context in which the resource should be retrieved. This value may be a repository file ID, repository file extension or plugin ID.
 @param resourceId Identifies a resource to be retrieved. This value may be a static file residing in a publicly visible plugin folder, repository file ID or content generator ID.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;!DOCTYPE html&amp;gt;
 &amp;lt;html xmlns:pho=&amp;quot;http:/www.pentaho.com&amp;quot;&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;title&amp;gt;Report Parameter UI&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;authenticationProviderAdmin.css&amp;quot; /&amp;gt;
 &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;../../../common-ui/resources/web/dojo/dijit/themes/pentaho/pentaho.css&amp;quot; /&amp;gt;
 &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../../../../webcontext.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
 require([&amp;quot;authenticationProviderAdmin&amp;quot;]);
 &amp;lt;/script&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body class=&amp;quot;soria&amp;quot; style=&amp;quot;border: none&amp;quot;&amp;gt;

 &amp;lt;!--  tree dialog --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapTreeDialog&amp;quot; data-dojo-type=&amp;quot;dijit.Dialog&amp;quot;  data-dojo-props=&amp;#39;title:&amp;quot;LDAP Browser&amp;quot;&amp;#39; class=&amp;quot;dialog&amp;quot;&amp;gt;
 &amp;lt;div id=&amp;quot;ldapTreeDialogContent&amp;quot; class=&amp;quot;dialog-content ldap-tree-padding&amp;quot;&amp;gt;
 &amp;lt;div id=&amp;quot;ldapTree&amp;quot; data-dojo-props=&amp;quot;autoExpand:true&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-buttons&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
 &amp;lt;button id=&amp;quot;btn_ldapTreeDialogOk&amp;quot; class=&amp;quot;pentaho-button ok-button first&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;button id=&amp;quot;btn_ldapTreeDialogCancel&amp;quot; class=&amp;quot;pentaho-button cancel-button last&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;!-- override dialog --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapDirtyDialog&amp;quot; data-dojo-type=&amp;quot;dijit.Dialog&amp;quot; class=&amp;quot;dialog&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-content pentaho-padding-sm&amp;quot;&amp;gt;
 &amp;lt;p class=&amp;quot;message&amp;quot;&amp;gt;You have unsaved changes. Do you want to continue?&amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-buttons&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
 &amp;lt;button id=&amp;quot;btn_ldapDirtyDialogNo&amp;quot; class=&amp;quot;pentaho-button no-button first&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;button id=&amp;quot;btn_ldapDirtyDialogYes&amp;quot; class=&amp;quot;pentaho-button yes-button last&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;!-- test dialog --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapTestMsgDialog&amp;quot; data-dojo-type=&amp;quot;dijit.Dialog&amp;quot; class=&amp;quot;dialog&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-content pentaho-padding-sm&amp;quot;&amp;gt;
 &amp;lt;p class=&amp;quot;message&amp;quot;&amp;gt; &amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-buttons&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
 &amp;lt;button id=&amp;quot;btn_hideTest&amp;quot; class=&amp;quot;pentaho-button close-button last&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;!-- edit server connection --&amp;gt;
 &amp;lt;div id=&amp;quot;editServerDialog&amp;quot; data-dojo-type=&amp;quot;dijit.Dialog&amp;quot; data-dojo-props=&amp;#39;title:&amp;quot;Edit External Authentication Server Connection&amp;quot;&amp;#39; class=&amp;quot;dialog&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-content pentaho-padding-sm&amp;quot;&amp;gt;
 &amp;lt;p class=&amp;quot;message&amp;quot;&amp;gt;Changing server conneciton will remove all current authentication and premissions settings. Do you want to continue?&amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-buttons&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
 &amp;lt;button id=&amp;quot;btn_editServerDialogYesClick&amp;quot; class=&amp;quot;pentaho-button ok-button first&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;button id=&amp;quot;btn_editServerDialogNoClick&amp;quot; class=&amp;quot;pentaho-button cancel-button last&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;!-- edit authentication method --&amp;gt;
 &amp;lt;div id=&amp;quot;authenticationChangeDialog&amp;quot; data-dojo-type=&amp;quot;dijit.Dialog&amp;quot; class=&amp;quot;dialog&amp;quot; &amp;gt;
 &amp;lt;div class=&amp;quot;dialog-content pentaho-padding-sm&amp;quot;&amp;gt;
 &amp;lt;p class=&amp;quot;message&amp;quot;&amp;gt;Changing the authentication method will remove all current authentication and premissions settings. Do you want to continue?&amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-buttons&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
 &amp;lt;button id=&amp;quot;btn_processAuthenticationMethodChange&amp;quot; class=&amp;quot;pentaho-button yes-change-button first&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;button id=&amp;quot;btn_authenticationChangeNoClick&amp;quot; class=&amp;quot;pentaho-button no-button last&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;



 &amp;lt;!-- populator dialog --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapPopTestDialog&amp;quot; data-dojo-type=&amp;quot;dijit.Dialog&amp;quot; class=&amp;quot;dialog&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-content pentaho-padding-sm&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorGroupRoleAttributeLabel&amp;quot;&amp;gt;Group Role Attribute:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorGroupRoleAttributeValue value&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorGroupRoleSearchBaseLabel&amp;quot;&amp;gt;Group Search Base:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorGroupRoleSearchBaseValue value&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorGroupSearchFilterLabel&amp;quot;&amp;gt;Group Search Filter:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorGroupSearchFilterValue value&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorRolePrefixLabel&amp;quot;&amp;gt;Role Prefix:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorRolePrefixValue value&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapUserLabel&amp;quot;&amp;gt;User Name:&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;input id=&amp;quot;ldapPopTestUserName&amp;quot; type=&amp;quot;text&amp;quot; /&amp;gt;
 &amp;lt;br /&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;label class=&amp;quot;ldapUserDomainLabel&amp;quot;&amp;gt;User DN:&amp;lt;/label&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;input id=&amp;quot;ldapPopTestUserDn&amp;quot; type=&amp;quot;text&amp;quot;/&amp;gt;
 &amp;lt;br /&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-buttons&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
 &amp;lt;button id=&amp;quot;btn_testPopulator&amp;quot; class=&amp;quot;pentaho-button ok-button first&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;button id=&amp;quot;btn_hideLdapPropsTest&amp;quot; class=&amp;quot;pentaho-button cancel-button last&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;



 &amp;lt;!-- user test dialog --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapUserTestDialog&amp;quot; data-dojo-type=&amp;quot;dijit.Dialog&amp;quot; class=&amp;quot;dialog&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-content pentaho-padding-sm&amp;quot;&amp;gt;
 &amp;lt;p class=&amp;quot;message&amp;quot;&amp;gt;With the search base and search filter configuration search for a user name that exists in your LDAP server.&amp;lt;/p&amp;gt;
 &amp;lt;br/&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapUserTestLabel&amp;quot;&amp;gt;Search For User:&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapUserTestUserName&amp;quot; type=&amp;quot;text&amp;quot; /&amp;gt;
 &amp;lt;br /&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;dialog-buttons&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
 &amp;lt;button id=&amp;quot;btn_testLdapUserSearch&amp;quot; class=&amp;quot;pentaho-button ok-button first&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;button id=&amp;quot;btn_hideLdapUserTestDialog&amp;quot; class=&amp;quot;pentaho-button cancel-button last&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;


 &amp;lt;div style=&amp;quot;padding: 0px;&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;pentaho-fieldgroup-major titleLabel&amp;quot;&amp;gt;Authentication&amp;lt;/div&amp;gt;
 &amp;lt;br/&amp;gt;
 &amp;lt;!-- CONNECTION PARAMS --&amp;gt;
 &amp;lt;div id=&amp;quot;authenticationSelector&amp;quot;&amp;gt;

 &amp;lt;div class=&amp;quot;authenticationMethodLabel authMethod&amp;quot;&amp;gt;Authentication Method&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;authText authenticationMethodDescriptionLabel&amp;quot;&amp;gt;
 Select where user and their log in credentials will be managed:
 &amp;lt;/div&amp;gt;

 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;input checked=&amp;quot;checked&amp;quot; name=&amp;quot;securityProvider&amp;quot; type=&amp;quot;radio&amp;quot; value=&amp;quot;jackrabbit&amp;quot; /&amp;gt;
 &amp;lt;div class=&amp;quot;pentahoSecurityLabel authValue&amp;quot;&amp;gt;Local - Use basic Pentaho authentication&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;input name=&amp;quot;securityProvider&amp;quot; type=&amp;quot;radio&amp;quot; value=&amp;quot;ldap&amp;quot; /&amp;gt;
 &amp;lt;div class=&amp;quot;ldapSecurityLabel authValue&amp;quot;&amp;gt;External - Use LDAP / Active Directory server&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;br /&amp;gt;


 &amp;lt;br /&amp;gt;
 &amp;lt;div id=&amp;quot;ldapConnection&amp;quot; style=&amp;quot;display: none&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapConnectionTitleLabel authMethod&amp;quot;&amp;gt;LDAP Server Connection&amp;lt;/div&amp;gt;

 &amp;lt;!-- to edit config --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapConnectionEdit&amp;quot; style=&amp;quot;display:block&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;authText ldapServerUrlLabel&amp;quot;&amp;gt;Server URL:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapServerUrlInput authValue adminField&amp;quot; type=&amp;quot;text&amp;quot; /&amp;gt;

 &amp;lt;div class=&amp;quot;authText ldapUserLabel&amp;quot;&amp;gt;User Name:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapUserInput authValue adminField&amp;quot; type=&amp;quot;text&amp;quot; /&amp;gt;

 &amp;lt;div class=&amp;quot;authText ldapPasswordLabel&amp;quot;&amp;gt;Password:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPasswordInput authValue adminField&amp;quot; type=&amp;quot;password&amp;quot; /&amp;gt;

 &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;
 &amp;lt;div class=&amp;quot;authText ldapTestConnectionLabel&amp;quot;&amp;gt;Test connection to complete LDAP setup&amp;lt;/div&amp;gt;
 &amp;lt;br/&amp;gt;
 &amp;lt;div class=&amp;quot;securityConfigButton&amp;quot;&amp;gt;
 &amp;lt;button id=&amp;quot;testServerConnectionButton&amp;quot; class=&amp;quot;pentaho-button testServerConnectionButton&amp;quot; &amp;gt;
 &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;!-- edited config --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapConnectionEditor&amp;quot; style=&amp;quot;display:none&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;authText ldapServerUrlLabel&amp;quot; &amp;gt;Server URL:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapServerUrlValue authValue&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;pentaho-editbutton&amp;quot; id=&amp;quot;btn_editConnection&amp;quot; title=&amp;quot;Edit connection&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;br /&amp;gt;

 &amp;lt;div&amp;gt;
 &amp;lt;div id=&amp;quot;ldapSettingsGroup&amp;quot; style=&amp;quot;display: none&amp;quot;&amp;gt;

 &amp;lt;!-- Ldap administration configuration --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapAdministration&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapAdministrationTitleLabel authMethod&amp;quot;&amp;gt;Pentaho System Administrator&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapAdministratiorUserLabel authText&amp;quot;&amp;gt;Select user from LDAP server:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;input class=&amp;quot;ldapAdministratorUserInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;
 &amp;lt;button class=&amp;quot;adminButton&amp;quot; id=&amp;quot;btn_ldapAdministratorUserInput&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapAdministrationRoleLabel authText&amp;quot;&amp;gt;Select role from LDAP server:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;input class=&amp;quot;ldapAdministratorRoleInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;
 &amp;lt;button class=&amp;quot;adminButton&amp;quot; id=&amp;quot;btn_ldapAdministratorRoleInput&amp;quot; &amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;

 &amp;lt;!-- ldap configuration --&amp;gt;
 &amp;lt;div class=&amp;quot;ldapConfigurationTitle authMethod&amp;quot;&amp;gt;LDAP Configuration&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;authText&amp;quot; id=&amp;quot;customLdapProviderLabel&amp;quot; &amp;gt;Other&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;select id=&amp;quot;ldapTypeSelector&amp;quot;&amp;gt;
 &amp;lt;option class=&amp;quot;ldapTypeSelectorApacheOption&amp;quot; selected=&amp;quot;selected&amp;quot; value=&amp;quot;ldapApacheConfiguration&amp;quot;&amp;gt;Apache DS&amp;lt;/option&amp;gt;
 &amp;lt;option class=&amp;quot;ldapTypeSelectorCustomOption&amp;quot; value=&amp;quot;ldapCustomConfiguration&amp;quot;&amp;gt;Custom&amp;lt;/option&amp;gt;
 &amp;lt;/select&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;!-- ldap apache configuration --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapApacheConfiguration&amp;quot; class=&amp;quot;ldapApacheConfiguration configuration&amp;quot; style=&amp;quot;display: none;&amp;quot;&amp;gt;
 &amp;lt;!-- User Base --&amp;gt;
 &amp;lt;div class=&amp;quot;ldapUserBaseLabel authText&amp;quot;&amp;gt;User Base:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;input class=&amp;quot;ldapUserSearchBaseInput adminField&amp;quot; type=&amp;quot;text&amp;quot; /&amp;gt;
 &amp;lt;button class=&amp;quot;adminButton&amp;quot; id=&amp;quot;btn_ldapUserSearchBaseInput&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;!-- Group Base --&amp;gt;
 &amp;lt;div class=&amp;quot;ldapGroupBaseLabel authText&amp;quot;&amp;gt;Group Base:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;input class=&amp;quot;ldapGroupBaseInput adminField&amp;quot; type=&amp;quot;text&amp;quot; /&amp;gt;
 &amp;lt;button class=&amp;quot;adminButton&amp;quot; id=&amp;quot;btn_ldapGroupBaseInput&amp;quot; &amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;div style=&amp;quot;display: none&amp;quot;&amp;gt;
 &amp;lt;!-- This stuff is hidden but populated for save functions --&amp;gt;
 &amp;lt;input class=&amp;quot;ldapUserSearchFilterInput&amp;quot; /&amp;gt;

 &amp;lt;input class=&amp;quot;ldapRoleBaseInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapRoleSearchBaseInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapRoleSearchFilterInput&amp;quot; /&amp;gt;

 &amp;lt;input class=&amp;quot;ldapPopulatorGroupRoleAttributeInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorGroupSearchFilterInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorGroupRoleSearchBaseInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorRolePrefixInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorSubtreeInput&amp;quot; name=&amp;quot;ldapPopulatorSubtreeInput&amp;quot; type=&amp;quot;radio&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorUpperCaseInput&amp;quot; name=&amp;quot;ldapPopulatorUpperCaseInput&amp;quot; type=&amp;quot;radio&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;div id=&amp;quot;ldapMicrosoftConfiguration&amp;quot; class=&amp;quot;microsoftConfigPanel configuration&amp;quot; style=&amp;quot;display: none;&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;ldapUserBaseLabel authText&amp;quot;&amp;gt;User Base:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;input class=&amp;quot;ldapUserSearchBaseInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;
 &amp;lt;button class=&amp;quot;adminButton&amp;quot; id=&amp;quot;btn_ldapUserSearchBaseInput2&amp;quot; &amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;div class=&amp;quot;ldapGroupBaseLabel authText&amp;quot;&amp;gt;Group Base:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;groupOption&amp;quot;&amp;gt;
 &amp;lt;input class=&amp;quot;ldapGroupBaseInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;
 &amp;lt;button class=&amp;quot;adminButton&amp;quot; id=&amp;quot;btn_ldapGroupBaseInput2&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;div style=&amp;quot;display: none&amp;quot;&amp;gt;
 &amp;lt;!-- This stuff is hidden but populated for test and save functions --&amp;gt;
 &amp;lt;input class=&amp;quot;ldapUserSearchFilterInput&amp;quot; /&amp;gt;

 &amp;lt;input class=&amp;quot;ldapRoleBaseInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapRoleSearchBaseInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapRoleSearchFilterInput&amp;quot; /&amp;gt;

 &amp;lt;input class=&amp;quot;ldapPopulatorGroupRoleAttributeInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorGroupSearchFilterInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorGroupRoleSearchBaseInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorRolePrefixInput&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorSubtreeInput&amp;quot; name=&amp;quot;ldapPopulatorSubtreeInput&amp;quot; type=&amp;quot;radio&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorUpperCaseInput&amp;quot; name=&amp;quot;ldapPopulatorUpperCaseInput&amp;quot; type=&amp;quot;radio&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;!-- ldap custom configuration --&amp;gt;
 &amp;lt;div id=&amp;quot;ldapCustomConfiguration&amp;quot; class=&amp;quot;ldapCustomConfiguration configuration&amp;quot; style=&amp;quot;display: none;&amp;quot;&amp;gt;
 &amp;lt;!-- user search configuration --&amp;gt;
 &amp;lt;br/&amp;gt;
 &amp;lt;span class=&amp;quot;ldapCustomUserSearchTitle authMethod&amp;quot;&amp;gt;User Search&amp;lt;/span&amp;gt;
 &amp;lt;br/&amp;gt;
 &amp;lt;div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapUserSearchBaseLabel authText&amp;quot;&amp;gt;Search Base:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapUserSearchBaseInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;

 &amp;lt;div class=&amp;quot;ldapUserSearchFilderLabel authText&amp;quot;&amp;gt;Search Filter:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapUserSearchFilterInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;

 &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;

 &amp;lt;div class=&amp;quot;securityConfigButton&amp;quot;&amp;gt;
 &amp;lt;button class=&amp;quot;pentaho-button test-button&amp;quot; id=&amp;quot;btn_showLdapUserTestDialog&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;
 &amp;lt;!-- roles configuration --&amp;gt;
 &amp;lt;span class=&amp;quot;ldapRolesTitle authMethod&amp;quot;&amp;gt;Roles&amp;lt;/span&amp;gt;
 &amp;lt;br/&amp;gt;
 &amp;lt;div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapRoleBaseLabel authText&amp;quot;&amp;gt;Role Attribute:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapRoleBaseInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;

 &amp;lt;div class=&amp;quot;ldapRoleSearchFilterLabel authText&amp;quot;&amp;gt;Role Search Filter:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapRoleSearchFilterInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;

 &amp;lt;div class=&amp;quot;ldapRoleSearchBaseLabel authText&amp;quot;&amp;gt;Role Search Base:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapRoleSearchBaseInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;

 &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;

 &amp;lt;div class=&amp;quot;securityConfigButton&amp;quot;&amp;gt;
 &amp;lt;button class=&amp;quot;pentaho-button test-button&amp;quot; id=&amp;quot;btn_testAuthoritiesSearch&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;
 &amp;lt;span class=&amp;quot;ldapPopulatorTitle authMethod&amp;quot;&amp;gt;Populator&amp;lt;/span&amp;gt;
 &amp;lt;br/&amp;gt;
 &amp;lt;div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorGroupRoleAttributeLabel authText&amp;quot;&amp;gt;Group Role Attribute:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorGroupRoleAttributeInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;

 &amp;lt;div class=&amp;quot;ldapPopulatorGroupRoleSearchBaseLabel authText&amp;quot;&amp;gt;Group Search Base:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorGroupRoleSearchBaseInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;

 &amp;lt;div class=&amp;quot;ldapPopulatorGroupSearchFilterLabel authText&amp;quot;&amp;gt;Group Search Filter:&amp;lt;/div&amp;gt;
 &amp;lt;input class=&amp;quot;ldapPopulatorGroupSearchFilterInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;

 &amp;lt;div class=&amp;quot;ldapPopulatorRolePrefixLabel authText&amp;quot;&amp;gt;Role Prefix:&amp;lt;/div&amp;gt;
 &amp;lt;input  class=&amp;quot;ldapPopulatorRolePrefixInput adminField&amp;quot; type=&amp;quot;text&amp;quot;  /&amp;gt;

 &amp;lt;div class=&amp;quot;ldapPopulatorUpperCaseLabel authText&amp;quot;&amp;gt;Convert To Upper Case:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorUpperCaseDescription groupOption&amp;quot;&amp;gt;
 &amp;lt;input name=&amp;quot;ldapPopulatorUpperCaseInput&amp;quot; class=&amp;quot;ldapPopulatorUpperCaseInput&amp;quot; type=&amp;quot;radio&amp;quot; value=&amp;quot;true&amp;quot; /&amp;gt;
 &amp;lt;label class=&amp;quot;yes-button&amp;quot;&amp;gt;Yes&amp;lt;/label&amp;gt;
 &amp;lt;input name=&amp;quot;ldapPopulatorUpperCaseInput&amp;quot; class=&amp;quot;ldapPopulatorUpperCaseInput&amp;quot; type=&amp;quot;radio&amp;quot; checked=&amp;quot;checked&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
 &amp;lt;label class=&amp;quot;no-button&amp;quot;&amp;gt;No&amp;lt;/label&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorSubtreeLabel authText&amp;quot;&amp;gt;Subtree:&amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;quot;ldapPopulatorSubtreeDescription groupOption&amp;quot;&amp;gt;
 &amp;lt;input name=&amp;quot;ldapPopulatorSubtreeInput&amp;quot; class=&amp;quot;ldapPopulatorSubtreeInput&amp;quot; type=&amp;quot;radio&amp;quot; value=&amp;quot;true&amp;quot; /&amp;gt;
 &amp;lt;label class=&amp;quot;yes-button&amp;quot;&amp;gt;Yes&amp;lt;/label&amp;gt;
 &amp;lt;input name=&amp;quot;ldapPopulatorSubtreeInput&amp;quot; class=&amp;quot;ldapPopulatorSubtreeInput&amp;quot; type=&amp;quot;radio&amp;quot; checked=&amp;quot;checked&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
 &amp;lt;label class=&amp;quot;no-button&amp;quot;&amp;gt;No&amp;lt;/label&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;br/&amp;gt;
 &amp;lt;div class=&amp;quot;securityConfigButton&amp;quot;&amp;gt;
 &amp;lt;button class=&amp;quot;pentaho-button test-button&amp;quot; id=&amp;quot;btn_showPopulatorTestDialog&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;


 &amp;lt;footer&amp;gt;
 &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;
 &amp;lt;div id=&amp;quot;buttonDivSave&amp;quot; class=&amp;quot;securityConfigButton&amp;quot; style=&amp;quot;display: none;&amp;quot;&amp;gt;
 &amp;lt;button id=&amp;quot;saveConfigButton&amp;quot; class=&amp;quot;pentaho-button&amp;quot; &amp;gt;Save&amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/footer&amp;gt;
 &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:method id="doFormPost" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Gets a resource identified by the compound key contextId and resourceId. This request may include additional parameters used to render the resource.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/repos/xanalyzer/service/ajax/lookupXmiId
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 catalog=t&amp;cube=t&amp;time=1389817320072
 &lt;/pre&gt;
 &lt;/p&gt;

 @param contextId  Identifies the context in which the resource should be retrieved. This value may be a repository file ID, repository file extension or plugin ID
 @param resourceId Identifies a resource to be retrieved. This value may be a static file residing in a publicly visible plugin folder, repository file ID or content generator ID
 @param formParams Any arguments needed to render the resource

 @return A jax-rs Response object with the appropriate status code, header, and body. In many cases this will trigger a streaming operation after it it is returned to the caller..

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="application/x-www-form-urlencoded"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/content"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetFileOrDir" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/default"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doExecuteDefault" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Takes a pathId to a file and generates a URI that represents the URL to call to generate content from that file.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repos/public:steel%20wheels:Invoice%20(report).prpt/default
 &lt;/p&gt;

 @param pathId @param pathId

 @return URI that represents a forwarding URL to execute to generate content from the file {pathId}.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/executableTypes"><ns2:method id="getExecutableTypes" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves the list of supported content type in the platform

 @return list of &lt;code&gt; ExecutableFileTypeDto &lt;/code&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/xml"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/userroledao/"><ns2:doc>UserRoleDao manage pentaho security user and roles in the platform.</ns2:doc><ns2:resource path="/deleteRoles"><ns2:method id="deleteRole" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Delete role(s) from the platform

 @param roleNames (list of tab (\t) separated role names)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="roleNames" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/deleteUsers"><ns2:method id="deleteUser" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Delete user(s) from the platform

 @param userNames (list of tab (\t) separated user names)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="userNames" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/logicalRoleMap"><ns2:method id="getRoleBindingStruct" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of logical roles in the platform

 @param locale (locale)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="locale" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation element="systemRolesMap" mediaType="application/xml"/><ns2:representation element="systemRolesMap" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/roles"><ns2:method id="getRoles" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the list of roles in the platform's repository

 @return list of roles in the platform
 @throws Exception
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="roleList" mediaType="application/xml"/><ns2:representation element="roleList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/users"><ns2:method id="getUsers" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the list of users in the platform's repository

 @return list of users in the platform
 @throws Exception
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="userList" mediaType="application/xml"/><ns2:representation element="userList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/createRole"><ns2:method id="createRole" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Create a new role with the provided information

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param roleName   (name of the new role)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="roleName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/createUser"><ns2:method id="createUser" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Create a new user with provided information.

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param user       (user information &lt;code&gt; User &lt;/code&gt;)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:representation element="user" mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/roleMembers"><ns2:method id="getRoleMembers" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves list of users for the selected role

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param roleName   (role name)
 @return list of users for the selected role
 @throws Exception
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="roleName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation element="userList" mediaType="application/xml"/><ns2:representation element="userList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/userRoles"><ns2:method id="getUserRoles" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves a selected user's roles

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param userName   (user name)
 @return list of roles fir the selected user
 @throws Exception
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="userName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation element="roleList" mediaType="application/xml"/><ns2:representation element="roleList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/assignRoleToUser"><ns2:method id="assignRoleToUser" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Associates selected role(s) to a user

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param userName   (username)
 @param roleNames  (tab (\t) separated list of role names)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="userName" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="roleNames" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/removeRoleFromUser"><ns2:method id="removeRoleFromUser" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Remove selected roles(s) from a selected user

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param userName   (username)
 @param roleNames  (tab (\t) separated list of role names)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="userName" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="roleNames" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/assignAllRolesToUser"><ns2:method id="assignAllRolesToUser" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Associate all roles to the selected user

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param userName   (username)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="userName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/removeAllRolesFromUser"><ns2:method id="removeAllRolesFromUser" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Remove all roles from the selected user

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param userName   (username)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="userName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/assignUserToRole"><ns2:method id="assignUserToRole" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Associate list of users to the selected role

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param userNames  (list of tab (\t) separated user names
 @param roleName   (role name)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="userNames" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="roleName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/removeUserFromRole"><ns2:method id="removeUserFromRole" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Remove user(s) from a particular role

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param userNames  (list of tab (\t) separated user names
 @param roleName   (role name)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="userNames" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="roleName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/assignAllUsersToRole"><ns2:method id="assignAllUsersToRole" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Associates all user to a particular role

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param roleName   (role name)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="roleName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/removeAllUsersFromRole"><ns2:method id="removeAllUsersFromRole" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Removes all users from a particular role

 @param tenantPath (tenant path where the user exist, null of empty string assumes default tenant)
 @param roleName   (role name)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="tenant" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="roleName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/updatePassword"><ns2:method id="updatePassword" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Update the password of a selected user

 @param user (user information &lt;code&gt; User &lt;/code&gt;)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="user" mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/roleAssignments"><ns2:method id="setLogicalRoles" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Associate a particular runtime role to list of logical role in the repository

 @param roleAssignments (logical to runtime role assignments)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="logicalRoleAssignments" mediaType="application/xml"/><ns2:representation element="logicalRoleAssignments" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/userrolelist/"><ns2:doc>The UserRoleListResource service lists roles, permissions, and users. Provides a list of users per role and roles per user.</ns2:doc><ns2:resource path="/extraRoles"><ns2:method id="getExtraRoles" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns roles identified as &quot;extra roles&quot; from the repository.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/userrolelist/extraRoles
 &lt;/p&gt;

 @return Roles identified as &quot;extra roles&quot; are returned as a list from the repository as shown in the example.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;roleList&amp;gt;&amp;lt;roles&amp;gt;Authenticated&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Anonymous&amp;lt;/roles&amp;gt;&amp;lt;/roleList&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="roleList" mediaType="application/xml"/><ns2:representation element="roleList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/roles"><ns2:method id="getRoles" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Get a list of the standard roles in the platform.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/userrolelist/roles
 &lt;/p&gt;

 @return A list of Role objects that contains the standard roles in the platform.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;roleList&amp;gt;&amp;lt;roles&amp;gt;Anonymous&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Business Analyst&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Authenticated&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Report Author&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Power User&amp;lt;/roles&amp;gt;&amp;lt;/roleList&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="roleList" mediaType="application/xml"/><ns2:representation element="roleList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/users"><ns2:method id="getUsers" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the list of users in the platform.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/userrolelist/users
 &lt;/p&gt;

 @return A list of User objects for users in the platform.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;userList&amp;gt;&amp;lt;users&amp;gt;pat&amp;lt;/users&amp;gt;&amp;lt;users&amp;gt;admin&amp;lt;/users&amp;gt;&amp;lt;users&amp;gt;suzy&amp;lt;/users&amp;gt;&amp;lt;users&amp;gt;tiffany&amp;lt;/users&amp;gt;&amp;lt;users&amp;gt;enco*de:te^s_t$&amp;lt;/users&amp;gt;&amp;lt;/userList&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="userList" mediaType="application/xml"/><ns2:representation element="userList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/allRoles"><ns2:method id="getAllRoles" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Get a list of the all roles in the platform including Anonymous and Administrator.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/userrolelist/allRoles
 &lt;/p&gt;

 @return A list of Role objects that contains all the roles in the platform.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;roleList&amp;gt;&amp;lt;roles&amp;gt;Anonymous&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Business Analyst&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Authenticated&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Report Author&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Power User&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Authenticated&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Anonymous&amp;lt;/roles&amp;gt;&amp;lt;/roleList&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="roleList" mediaType="application/xml"/><ns2:representation element="roleList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/getUsersInRole"><ns2:method id="getUsersInRole" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Gets the list of users that have the role specified by the role parameter. The list of valid roles can be obtained by calling the /roles endpoint.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/userrolelist/getUsersInRole?role=Authenticated
 &lt;/p&gt;

 @param role The role to get the users for

 @return A list of User objects that have the roles specified in the role parameter.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&amp;lt;users&amp;gt;&amp;lt;user&amp;gt;pat&amp;lt;/user&amp;gt;&amp;lt;user&amp;gt;admin&amp;lt;/user&amp;gt;&amp;lt;user&amp;gt;suzy&amp;lt;/user&amp;gt;&amp;lt;user&amp;gt;tiffany&amp;lt;/user&amp;gt;&amp;lt;user&amp;gt;enco*de:te^s_t$&amp;lt;/user&amp;gt;&amp;lt;/users&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="role" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="application/xml"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/getRolesForUser"><ns2:method id="getRolesForUser" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Gets the roles for the given user.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/userrolelist/getRolesForUser?user=admin
 &lt;/p&gt;

 @param user The username to get the roles for

 @return A list of Role objects containing the roles for the given user.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&amp;lt;roles&amp;gt;&amp;lt;role&amp;gt;Administrator&amp;lt;/role&amp;gt;&amp;lt;role&amp;gt;Authenticated&amp;lt;/role&amp;gt;&amp;lt;/roles&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="application/xml"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/systemRoles"><ns2:method id="getSystemRoles" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns Roles identified as &quot;system roles&quot; from the repository.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/userrolelist/systemRoles
 &lt;/p&gt;

 @return A list of system roles.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;roleList&amp;gt;&amp;lt;roles&amp;gt;Authenticated&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Administrator&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Anonymous&amp;lt;/roles&amp;gt;&amp;lt;/roleList&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="roleList" mediaType="application/xml"/><ns2:representation element="roleList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/permission-roles"><ns2:method id="getPermissionRoles" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Return a list of the permission roles in the platform.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/userrolelist/permission-roles
 &lt;/p&gt;

 @return A list of permission roles in the platform.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;roleList&amp;gt;&amp;lt;roles&amp;gt;Anonymous&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Business Analyst&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Authenticated&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Report Author&amp;lt;/roles&amp;gt;&amp;lt;roles&amp;gt;Power User&amp;lt;/roles&amp;gt;&amp;lt;/roleList&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="roleList" mediaType="application/xml"/><ns2:representation element="roleList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/permission-users"><ns2:method id="getPermissionUsers" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the list of permission users in the platform.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/userrolelist/permission-users
 &lt;/p&gt;

 @return A list of User objects for users with permissions in the platform.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;userList&amp;gt;&amp;lt;users&amp;gt;pat&amp;lt;/users&amp;gt;&amp;lt;users&amp;gt;admin&amp;lt;/users&amp;gt;&amp;lt;users&amp;gt;suzy&amp;lt;/users&amp;gt;&amp;lt;users&amp;gt;tiffany&amp;lt;/users&amp;gt;&amp;lt;users&amp;gt;enco*de:te^s_t$&amp;lt;/users&amp;gt;&amp;lt;/userList&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="userList" mediaType="application/xml"/><ns2:representation element="userList" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/system/"><ns2:doc>This api provides methods for discovering information about the system</ns2:doc><ns2:method id="getAll" name="GET"><ns2:response><ns2:representation mediaType="application/xml"/></ns2:response></ns2:method><ns2:resource path="/locale"><ns2:method id="getLocale" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Return the server side locale

 @return server's locale
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:method id="setLocaleOverride" name="POST"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Apply the selected locale to the user console

 @param locale (user console's locale)

 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/timezones"><ns2:method id="getTimeZones" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns a list of TimeZones ensuring that the server (default) timezone is at the top of the list (0th element)

 @return a list of TimeZones ensuring that the server (default) timezone is at the top of the list (0th element)
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/json"/><ns2:representation mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/authentication-provider"><ns2:method id="getAuthenticationProvider" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Return JSON string reporting which authentication provider is currently in use

 Response sample: { &quot;authenticationType&quot;: &quot;JCR_BASED_AUTHENTICATION&quot; }

 @return AuthenticationProvider represented as JSON response
 @throws Exception
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/executableTypes"><ns2:method id="getExecutableTypes" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves the list of supported content type in the platform

 @return list of &lt;code&gt; ExecutableFileTypeDto &lt;/code&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/xml"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/mantle/"><ns2:doc>The UserConsoleResource service provides the ability to check whether the current user is authenticated and/or is an administrator.</ns2:doc><ns2:resource path="/locale"><ns2:method id="getLocale" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Return the server side locale

 @return server's locale
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:method id="setLocaleOverride" name="POST"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Apply the selected locale to the user console

 @param locale (user console's locale)
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/isAuthenticated"><ns2:method id="isAuthenticated" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns whether the user is sn authenticated user or not.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/mantle/isAuthenticated
 &lt;/p&gt;

 @return String true if the user is an administrator, or false otherwise.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 true
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/isAdministrator"><ns2:method id="isAdministrator" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns whether the current user is an administrator.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/mantle/isAdministrator
 &lt;/p&gt;

 @return String true if the user is an administrator, or false otherwise.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 true
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/getAdminContent"><ns2:method id="getAdminContent" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the list of admin related settings

 @return list of settings
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="setting" mediaType="application/json"/><ns2:representation element="setting" mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/settings"><ns2:method id="getMantleSettings" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Return the current user console settings

 @return current settings
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="setting" mediaType="application/json"/><ns2:representation element="setting" mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/cubes"><ns2:method id="getMondrianCatalogs" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Return the list of mondrian cubes in the platform

 @return list of cubes
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="cube" mediaType="application/json"/><ns2:representation element="cube" mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/session-variable"><ns2:method id="setSessionVariable" name="POST"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="value" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:method id="getSessionVariable" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:method id="clearSessionVariable" name="DELETE"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="key" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/session/"><ns2:doc>The SessionResource service lists the user's current workspace as well as the workspace folder path.</ns2:doc><ns2:resource path="/userWorkspaceDir"><ns2:method id="doGetCurrentUserDir" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the current user's workspace folder path.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/session/userWorkspaceDir
 &lt;/p&gt;

 @return String object containing the workspace folder path.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 /home/admin/workspace
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/workspaceDirForUser/{user}"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user" style="template" type="xs:string"/><ns2:method id="doGetUserDir" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the workspace folder path for the selected user.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/session/workspaceDirForUser/admin
 &lt;/p&gt;

 @param user String of the user name.

 @return String object containing the workspace folder path.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 workspace
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/setredirect"><ns2:method id="setredirect" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/repo/dirs/"><ns2:doc>This resource manages folders in the repository and provides methods for creating new folders.</ns2:doc><ns2:resource path="{pathId : .+}"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="createDirs" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Creates a new folder with the specified name.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/dirs/home
 &lt;br /&gt;&lt;b&gt;PUT data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This PUT body does not contain data.
 &lt;/pre&gt;
 &lt;/p&gt;

 @param pathId The path from the root folder to the root node of the tree to return using colon characters in
 place of / or \ characters. To clarify /path/to/file, the encoded pathId would be :path:to:file.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 couldNotCreateFolderDuplicate
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/repo/files/import"><ns2:method id="doPostImport" name="POST"><ns2:request><ns2:representation mediaType="multipart/form-data"/></ns2:request><ns2:response><ns2:representation mediaType="text/html"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/system/refresh"><ns2:doc>This resource is responsible for refreshing  different system components (metadata, mondrian etc.)</ns2:doc><ns2:resource path="/systemSettings"><ns2:method id="refreshSystemSettings" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/metadata"><ns2:method id="refreshMetadata" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/globalActions"><ns2:method id="executeGlobalActions" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;

 @return
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/mondrianSchemaCache"><ns2:method id="flushMondrianSchemaCache" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/reportingDataCache"><ns2:method id="purgeReportingDataCache" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/plugin-manager/"><ns2:resource path="/{pluginId}/setting/{settingName}"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pluginId" style="template" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="settingName" style="template" type="xs:string"/><ns2:method id="getPluginSetting" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the plugins setting with a provided setting name. This will search the plugins's settings.xml and return
 the selected setting
 @param pluginId (Plugin ID for the setting being searched)
 @param settingName (Setting name of a selected plugin)
 @return Value of the setting
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/overlays"><ns2:method id="getOverlays" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of XUL overlays for the provided id

 @param id
 @return list of &lt;code&gt; Overlay &lt;/code&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="query" type="xs:string" default=""/></ns2:request><ns2:response><ns2:representation element="overlay" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/settings/{settingName}"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="settingName" style="template" type="xs:string"/><ns2:method id="getPluginSettings" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of setting of a selected setting name from all registered plugins.

 @param settingName (name of the plugin setting)
 @return list of &lt;code&gt; Setting &lt;/code&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/perspectives"><ns2:method id="getPluginPerpectives" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of plugin perspective in the platform

 @return list of &lt;code&gt; PluginPerspective &lt;/code&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/ids"><ns2:method id="getPluginIds" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of registered plugin IDs

 @return list of ids
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/roles"><ns2:method id="getRoles" name="GET"><ns2:response><ns2:representation mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/password"><ns2:doc>provides a resource for encrypting a password using the configured IPasswordService</ns2:doc><ns2:resource path="/encrypt"><ns2:method id="encryptPassword" name="POST"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="application/x-www-form-urlencoded"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="password" style="query" type="xs:string"/></ns2:representation></ns2:request><ns2:response><ns2:representation mediaType="text/html"/></ns2:response></ns2:method><ns2:method id="encryptionForm" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/html"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/plugins/{pluginId}"><ns2:doc>Represents the public files available in a plugin.</ns2:doc><ns2:resource path="/files/{path : .+}"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pluginId" style="template" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="path" style="template" type="xs:string"/><ns2:method id="readFile" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the file from the selected plugin. This file is a static file (i.e javascript, html, css etc)

 @param pluginId (Plugin ID of the selected Plugin)
 @param path (Path of the file being retrieved. This is a colon separated path to the plugin file. This
 is usually a static file like a javascript, image or html
 @return
 @throws IOException
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/user-settings"><ns2:doc>This resource manages the user settings of the platform</ns2:doc><ns2:resource path="{setting : .+}"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="setting" style="template" type="xs:string"/><ns2:method id="getUserSetting" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve a particular user setting for the current user

 @param setting (Name of the setting)

 @return value of the setting for the user
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:method id="setUserSetting" name="POST"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Save the value of a particular setting for the current user

 @param setting  (Setting name)
 @param settingValue   (Value of the setting)

 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/list"><ns2:method id="getUserSettings" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the global settings and the user settings for the current user

 @return list of settings for the platform
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/json"/><ns2:representation mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/legacy/permissions"><ns2:method id="getLegacyPermissions" name="GET"><ns2:response><ns2:representation mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/authorization/action"><ns2:doc>Resource deals with the Authorization Action in the BA Platform. This service validates if a current user is authorized to perform a specific action.</ns2:doc><ns2:resource path="/isauthorized"><ns2:method id="validateAuth" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Validates if a current user is authorized to perform a specific action.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/authorization/action/isauthorized
 &lt;/p&gt;

 @param authAction Authorization Action to be validated for the current user.

 @return A boolean response based on the current user being authorized to perform a specific action within the system.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 false
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="authAction" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/theme"><ns2:doc>Resource manages themes for the platform</ns2:doc><ns2:resource path="/list"><ns2:method id="getSystemThemes" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; List the current supported themes in the platform

 @return list of themes
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="theme" mediaType="application/json"/><ns2:representation element="theme" mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/active"><ns2:method id="getActiveTheme" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Return the name of the active theme

 @return active theme
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/set"><ns2:method id="setTheme" name="POST"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Set the current theme to the one provided in this request


 @param theme (theme to be changed to)

 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/repo/publish"><ns2:doc>Publishes a content file to the repository. Used for Analyzer and Report Writer publish</ns2:doc><ns2:resource path="/publishfile"><ns2:method id="writeFile" name="POST"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Publishes the file to the provided path in the repository. The file will be overwritten if the overwrite flag
 is set to true.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/repo/publish/publishfile
 &lt;/p&gt;

 @param pathId        Colon separated path for the repository file.
 @param fileContents  Input stream containing the data.
 @param overwriteFile Flag to determine whether to overwrite the existing file in the repository or not.
 @param fileInfo  File information (Currently not being used).

 @return A jax-rs Response object with the appropriate status code, header, and body.
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="multipart/form-data"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/scheduler"><ns2:doc>The SchedulerResource service provides the means to create, read, update, delete, and list schedules and blockout periods.  Also provides the ability to control the status of schedules and the scheduler.</ns2:doc><ns2:resource path="/shutdown"><ns2:method id="shutdown" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Shuts down the scheduler.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/shutdown
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This POST body does not contain data.
 &lt;/pre&gt;
 &lt;/p&gt;

 @return A jax-rs Response object containing the status of the scheduler.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 PAUSED
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/start"><ns2:method id="start" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Resume the scheduler from a paused state.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/start
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This POST body does not contain data.
 &lt;/pre&gt;
 &lt;/p&gt;

 @return A jax-rs Response object containing the status of the scheduler.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 RUNNING
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/state"><ns2:method id="getState" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the state of the scheduler with the value of RUNNING or PAUSED.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/state
 &lt;/p&gt;

 @return status of the scheduler as RUNNING or PAUSED.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 RUNNING
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/pause"><ns2:method id="pause" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Pause the scheduler from a running state.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/pause
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This POST body does not contain data.
 &lt;/pre&gt;
 &lt;/p&gt;

 @return A jax-rs Response object containing the status of the scheduler.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 PAUSED
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/job"><ns2:method id="createJob" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Creates a new scheduled job.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/job
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobScheduleRequest&amp;gt;
 &amp;lt;jobName&amp;gt;JobName&amp;lt;/jobName&amp;gt;
 &amp;lt;simpleJobTrigger&amp;gt;
 &amp;lt;uiPassParam&amp;gt;MINUTES&amp;lt;/uiPassParam&amp;gt;
 &amp;lt;repeatInterval&amp;gt;1800&amp;lt;/repeatInterval&amp;gt;
 &amp;lt;repeatCount&amp;gt;-1&amp;lt;/repeatCount&amp;gt;
 &amp;lt;startTime&amp;gt;2014-08-14T11:46:00.000-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;endTime /&amp;gt;
 &amp;lt;/simpleJobTrigger&amp;gt;
 &amp;lt;inputFile&amp;gt;/public/Steel Wheels/Top Customers (report).prpt&amp;lt;/inputFile&amp;gt;
 &amp;lt;outputFile&amp;gt;/public/output&amp;lt;/outputFile&amp;gt;
 &amp;lt;jobParameters&amp;gt;
 &amp;lt;name&amp;gt;ParameterName&amp;lt;/name&amp;gt;
 &amp;lt;type&amp;gt;string&amp;lt;/type&amp;gt;
 &amp;lt;stringValue&amp;gt;false&amp;lt;/stringValue&amp;gt;
 &amp;lt;/jobParameters&amp;gt;
 &amp;lt;/jobScheduleRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param scheduleRequest A JobScheduleRequest object to define the parameters of the job being created.

 @return A jax-rs Response object with the created jobId.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 admin	JobName	1410786491777
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="jobScheduleRequest" mediaType="application/json"/><ns2:representation element="jobScheduleRequest" mediaType="application/xml"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/triggerNow"><ns2:method id="triggerNow" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Execute a previously scheduled job.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/triggerNow
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobRequest&amp;gt;
 &amp;lt;jobId&amp;gt;admin	JobName	1410786491777&amp;lt;/jobId&amp;gt;
 &amp;lt;/jobRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param jobRequest A JobRequest object containing the jobId.

 @return A Response object indicating the status of the scheduler.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 NORMAL
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="jobRequest" mediaType="application/xml"/><ns2:representation element="jobRequest" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/jobinfo"><ns2:method id="getJob" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Return the information for a specified job.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/jobinfo?jobId=admin%09JobName%091410786491777
 &lt;/p&gt;

 @param jobId The jobId of the job for which we are requesting information.
 @param asCronString Cron string (Unused)

 @return A Job object containing the info for the specified job.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;job&amp;gt;&amp;lt;jobId&amp;gt;admin	JobName	1410786491777&amp;lt;/jobId&amp;gt;&amp;lt;jobName&amp;gt;JobName&amp;lt;/jobName&amp;gt;&amp;lt;jobParams&amp;gt;&amp;lt;jobParams&amp;gt;&amp;lt;name&amp;gt;uiPassParam&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;MINUTES&amp;lt;/value&amp;gt;&amp;lt;/jobParams&amp;gt;&amp;lt;jobParams&amp;gt;&amp;lt;name&amp;gt;ActionAdapterQuartzJob-StreamProvider&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;input file = /public/Steel Wheels/Top Customers (report).prpt:outputFile = /home/admin/JobName.*&amp;lt;/value&amp;gt;&amp;lt;/jobParams&amp;gt;&amp;lt;jobParams&amp;gt;&amp;lt;name&amp;gt;user_locale&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;en_US&amp;lt;/value&amp;gt;&amp;lt;/jobParams&amp;gt;&amp;lt;jobParams&amp;gt;&amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionUser&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;admin&amp;lt;/value&amp;gt;&amp;lt;/jobParams&amp;gt;&amp;lt;jobParams&amp;gt;&amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionId&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;prpt.backgroundExecution&amp;lt;/value&amp;gt;&amp;lt;/jobParams&amp;gt;&amp;lt;jobParams&amp;gt;&amp;lt;name&amp;gt;ParameterName&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;false&amp;lt;/value&amp;gt;&amp;lt;/jobParams&amp;gt;&amp;lt;jobParams&amp;gt;&amp;lt;name&amp;gt;lineage-id&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;5212a120-3294-49e8-9c5d-c755b9766c43&amp;lt;/value&amp;gt;&amp;lt;/jobParams&amp;gt;&amp;lt;/jobParams&amp;gt;&amp;lt;jobTrigger xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:type=&amp;quot;simpleJobTrigger&amp;quot;&amp;gt;&amp;lt;duration&amp;gt;-1&amp;lt;/duration&amp;gt;&amp;lt;startTime&amp;gt;2014-08-14T11:46:00-04:00&amp;lt;/startTime&amp;gt;&amp;lt;uiPassParam&amp;gt;MINUTES&amp;lt;/uiPassParam&amp;gt;&amp;lt;repeatCount&amp;gt;-1&amp;lt;/repeatCount&amp;gt;&amp;lt;repeatInterval&amp;gt;1800&amp;lt;/repeatInterval&amp;gt;&amp;lt;/jobTrigger&amp;gt;&amp;lt;nextRun&amp;gt;2014-08-14T11:46:00-04:00&amp;lt;/nextRun&amp;gt;&amp;lt;state&amp;gt;NORMAL&amp;lt;/state&amp;gt;&amp;lt;userName&amp;gt;admin&amp;lt;/userName&amp;gt;&amp;lt;/job&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="jobId" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="asCronString" style="query" type="xs:string" default="false"/></ns2:request><ns2:response><ns2:representation element="job" mediaType="application/json"/><ns2:representation element="job" mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/jobs"><ns2:method id="getJobs" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;true&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the all the job(s) visible to the current users.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/jobs
 &lt;/p&gt;

 @param asCronString Cron string (Unused).
 @return A list of jobs that are visible to the current users.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobs&amp;gt;
 &amp;lt;job&amp;gt;
 &amp;lt;groupName&amp;gt;admin&amp;lt;/groupName&amp;gt;
 &amp;lt;jobId&amp;gt;admin	PentahoSystemVersionCheck	1408369303507&amp;lt;/jobId&amp;gt;
 &amp;lt;jobName&amp;gt;PentahoSystemVersionCheck&amp;lt;/jobName&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionUser&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;admin&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionClass&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;org.pentaho.platform.scheduler2.versionchecker.VersionCheckerAction&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;lineage-id&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;1986cc90-cf87-43f6-8924-9d6e443e7d5d&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;versionRequestFlags&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;0&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobTrigger xsi:type=&quot;simpleJobTrigger&quot;&amp;gt;
 &amp;lt;duration&amp;gt;-1&amp;lt;/duration&amp;gt;
 &amp;lt;startTime&amp;gt;2014-08-18T09:41:43.506-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;repeatCount&amp;gt;-1&amp;lt;/repeatCount&amp;gt;
 &amp;lt;repeatInterval&amp;gt;86400&amp;lt;/repeatInterval&amp;gt;
 &amp;lt;/jobTrigger&amp;gt;
 &amp;lt;lastRun&amp;gt;2014-08-18T11:37:31.412-04:00&amp;lt;/lastRun&amp;gt;
 &amp;lt;nextRun&amp;gt;2014-08-19T09:41:43.506-04:00&amp;lt;/nextRun&amp;gt;
 &amp;lt;state&amp;gt;NORMAL&amp;lt;/state&amp;gt;
 &amp;lt;userName&amp;gt;admin&amp;lt;/userName&amp;gt;
 &amp;lt;/job&amp;gt;
 &amp;lt;job&amp;gt;
 &amp;lt;groupName&amp;gt;admin&amp;lt;/groupName&amp;gt;
 &amp;lt;jobId&amp;gt;admin	UpdateAuditData	1408373019115&amp;lt;/jobId&amp;gt;
 &amp;lt;jobName&amp;gt;UpdateAuditData&amp;lt;/jobName&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;autoCreateUniqueFilename&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;false&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;uiPassParam&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;MINUTES&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-StreamProvider&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;input file = /public/pentaho-operations-mart/update_audit_mart_data/UpdateAuditData.xaction:outputFile = /public/pentaho-operations-mart/generated_logs/UpdateAuditData.*&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;user_locale&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;en_US&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionUser&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;admin&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionId&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;xaction.backgroundExecution&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;lineage-id&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;1f2402c4-0a70-40e4-b428-0d328f504cb3&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobTrigger xsi:type=&quot;simpleJobTrigger&quot;&amp;gt;
 &amp;lt;duration&amp;gt;-1&amp;lt;/duration&amp;gt;
 &amp;lt;startTime&amp;gt;2014-07-14T12:47:00-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;uiPassParam&amp;gt;MINUTES&amp;lt;/uiPassParam&amp;gt;
 &amp;lt;repeatCount&amp;gt;-1&amp;lt;/repeatCount&amp;gt;
 &amp;lt;repeatInterval&amp;gt;1800&amp;lt;/repeatInterval&amp;gt;
 &amp;lt;/jobTrigger&amp;gt;
 &amp;lt;lastRun&amp;gt;2014-08-18T12:47:00-04:00&amp;lt;/lastRun&amp;gt;
 &amp;lt;nextRun&amp;gt;2014-08-18T13:17:00-04:00&amp;lt;/nextRun&amp;gt;
 &amp;lt;state&amp;gt;NORMAL&amp;lt;/state&amp;gt;
 &amp;lt;userName&amp;gt;admin&amp;lt;/userName&amp;gt;
 &amp;lt;/job&amp;gt;
 &amp;lt;/jobs&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="asCronString" style="query" type="xs:boolean" default="false"/></ns2:request><ns2:response><ns2:representation element="job" mediaType="application/json"/><ns2:representation element="job" mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/pauseJob"><ns2:method id="pauseJob" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Pause the specified scheduled job.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/pauseJob
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobRequest&amp;gt;
 &amp;lt;jobId&amp;gt;admin	JobName	1410786491777&amp;lt;/jobId&amp;gt;
 &amp;lt;/jobRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param jobRequest A JobRequest object containing the jobId.

 @return A jax-rs Response object containing the status of the scheduled job.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 PAUSED
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="jobRequest" mediaType="application/xml"/><ns2:representation element="jobRequest" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/removeJob"><ns2:method id="removeJob" name="DELETE"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Delete the specified scheduled job from the platform.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 DELETE pentaho/api/scheduler/removeJob
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;DELETE data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobRequest&amp;gt;
 &amp;lt;jobId&amp;gt;admin	BlockoutAction	1410786491503&amp;lt;/jobId&amp;gt;
 &amp;lt;/jobRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param jobRequest A JobRequest object containing the jobId.

 @return A jax-rs Response object containing the status of the scheduled job.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 REMOVED
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="jobRequest" mediaType="application/xml"/><ns2:representation element="jobRequest" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/resumeJob"><ns2:method id="resumeJob" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Resume the specified scheduled job.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/resumeJob
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobRequest&amp;gt;
 &amp;lt;jobId&amp;gt;admin	JobName	1410786491777&amp;lt;/jobId&amp;gt;
 &amp;lt;/jobRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param jobRequest A JobRequest object containing the jobId.

 @return A jax-rs Response object containing the status of the scheduled job.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 NORMAL
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="jobRequest" mediaType="application/xml"/><ns2:representation element="jobRequest" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/blockout/shouldFireNow"><ns2:method id="shouldFireNow" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks if the selected blockout schedule should be fired now.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/blockout/shouldFireNow
 &lt;/p&gt;

 @return true or false whether or not the blockout should fire now.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 true
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/getContentCleanerJob"><ns2:method id="getContentCleanerJob" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Get the scheduled job created by the system for deleting generated files.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/getContentCleanerJob
 &lt;/p&gt;

 @return A Job object containing the definition of the content cleaner job.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;job&amp;gt;
 &amp;lt;groupName&amp;gt;admin&amp;lt;/groupName&amp;gt;
 &amp;lt;jobId&amp;gt;admin	GeneratedContentCleaner	1408377444383&amp;lt;/jobId&amp;gt;
 &amp;lt;jobName&amp;gt;GeneratedContentCleaner&amp;lt;/jobName&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;uiPassParam&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;DAILY&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;age&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;15552000&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;user_locale&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;en_US&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionUser&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;admin&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionClass&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;org.pentaho.platform.admin.GeneratedContentCleaner&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;lineage-id&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;c3cfbad4-2e34-4dbd-8071-a2f3c7e8fab9&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobTrigger xsi:type=&quot;simpleJobTrigger&quot;&amp;gt;
 &amp;lt;duration&amp;gt;-1&amp;lt;/duration&amp;gt;
 &amp;lt;startTime&amp;gt;2014-08-18T11:57:00-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;uiPassParam&amp;gt;DAILY&amp;lt;/uiPassParam&amp;gt;
 &amp;lt;repeatCount&amp;gt;-1&amp;lt;/repeatCount&amp;gt;
 &amp;lt;repeatInterval&amp;gt;86400&amp;lt;/repeatInterval&amp;gt;
 &amp;lt;/jobTrigger&amp;gt;
 &amp;lt;lastRun&amp;gt;2014-08-18T11:57:00-04:00&amp;lt;/lastRun&amp;gt;
 &amp;lt;nextRun&amp;gt;2014-08-19T11:57:00-04:00&amp;lt;/nextRun&amp;gt;
 &amp;lt;state&amp;gt;NORMAL&amp;lt;/state&amp;gt;
 &amp;lt;userName&amp;gt;admin&amp;lt;/userName&amp;gt;
 &amp;lt;/job&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="job" mediaType="application/json"/><ns2:representation element="job" mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/getJobs"><ns2:method id="getAllJobs" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the all the scheduled job(s) visible to the current users.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/getJobs
 &lt;/p&gt;

 @return A list of jobs that are visible to the current users.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobs&amp;gt;
 &amp;lt;job&amp;gt;
 &amp;lt;groupName&amp;gt;admin&amp;lt;/groupName&amp;gt;
 &amp;lt;jobId&amp;gt;admin	PentahoSystemVersionCheck	1408369303507&amp;lt;/jobId&amp;gt;
 &amp;lt;jobName&amp;gt;PentahoSystemVersionCheck&amp;lt;/jobName&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionUser&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;admin&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionClass&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;org.pentaho.platform.scheduler2.versionchecker.VersionCheckerAction&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;lineage-id&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;1986cc90-cf87-43f6-8924-9d6e443e7d5d&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;versionRequestFlags&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;0&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobTrigger xsi:type=&quot;simpleJobTrigger&quot;&amp;gt;
 &amp;lt;duration&amp;gt;-1&amp;lt;/duration&amp;gt;
 &amp;lt;startTime&amp;gt;2014-08-18T09:41:43.506-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;repeatCount&amp;gt;-1&amp;lt;/repeatCount&amp;gt;
 &amp;lt;repeatInterval&amp;gt;86400&amp;lt;/repeatInterval&amp;gt;
 &amp;lt;/jobTrigger&amp;gt;
 &amp;lt;lastRun&amp;gt;2014-08-18T11:37:31.412-04:00&amp;lt;/lastRun&amp;gt;
 &amp;lt;nextRun&amp;gt;2014-08-19T09:41:43.506-04:00&amp;lt;/nextRun&amp;gt;
 &amp;lt;state&amp;gt;NORMAL&amp;lt;/state&amp;gt;
 &amp;lt;userName&amp;gt;admin&amp;lt;/userName&amp;gt;
 &amp;lt;/job&amp;gt;
 &amp;lt;job&amp;gt;
 &amp;lt;groupName&amp;gt;admin&amp;lt;/groupName&amp;gt;
 &amp;lt;jobId&amp;gt;admin	UpdateAuditData	1408373019115&amp;lt;/jobId&amp;gt;
 &amp;lt;jobName&amp;gt;UpdateAuditData&amp;lt;/jobName&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;autoCreateUniqueFilename&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;false&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;uiPassParam&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;MINUTES&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-StreamProvider&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;input file = /public/pentaho-operations-mart/update_audit_mart_data/UpdateAuditData.xaction:outputFile = /public/pentaho-operations-mart/generated_logs/UpdateAuditData.*&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;user_locale&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;en_US&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionUser&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;admin&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionId&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;xaction.backgroundExecution&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;lineage-id&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;1f2402c4-0a70-40e4-b428-0d328f504cb3&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobTrigger xsi:type=&quot;simpleJobTrigger&quot;&amp;gt;
 &amp;lt;duration&amp;gt;-1&amp;lt;/duration&amp;gt;
 &amp;lt;startTime&amp;gt;2014-07-14T12:47:00-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;uiPassParam&amp;gt;MINUTES&amp;lt;/uiPassParam&amp;gt;
 &amp;lt;repeatCount&amp;gt;-1&amp;lt;/repeatCount&amp;gt;
 &amp;lt;repeatInterval&amp;gt;1800&amp;lt;/repeatInterval&amp;gt;
 &amp;lt;/jobTrigger&amp;gt;
 &amp;lt;lastRun&amp;gt;2014-08-18T12:47:00-04:00&amp;lt;/lastRun&amp;gt;
 &amp;lt;nextRun&amp;gt;2014-08-18T13:17:00-04:00&amp;lt;/nextRun&amp;gt;
 &amp;lt;state&amp;gt;NORMAL&amp;lt;/state&amp;gt;
 &amp;lt;userName&amp;gt;admin&amp;lt;/userName&amp;gt;
 &amp;lt;/job&amp;gt;
 &amp;lt;/jobs&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="job" mediaType="application/json"/><ns2:representation element="job" mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/isScheduleAllowed"><ns2:method id="isScheduleAllowed" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks whether the current user may schedule a repository file in the platform.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/isScheduleAllowed?id=b5f806b9-9f72-4814-b1e0-aa9e0ece7e1a
 &lt;/p&gt;

 @param id The repository file ID of the content to checked.

 @return true or false. true indicates scheduling is allowed and false indicates scheduling is not allowed for the file.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 true
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="id" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/canSchedule"><ns2:method id="doGetCanSchedule" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks whether the current user has authority to schedule any content in the platform.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/canSchedule
 &lt;/p&gt;

 @return true or false. true indicates scheduling is allowed and false indicates scheduling is not allowed for the user.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 true
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/jobState"><ns2:method id="getJobState" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks the state of the selected scheduled job.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/jobState
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobRequest&amp;gt;
 &amp;lt;jobId&amp;gt;admin	JobName	1410786491777&amp;lt;/jobId&amp;gt;
 &amp;lt;/jobRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param jobRequest A JobRequest object containing the jobId.

 @return A jax-rs Response object containing the status of the scheduled job.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 NORMAL
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="jobRequest" mediaType="application/xml"/><ns2:representation element="jobRequest" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/jobinfotest"><ns2:method id="getJobInfo" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;true&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="jobScheduleRequest" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/blockout/blockoutjobs"><ns2:method id="getBlockoutJobs" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Get all the blockout jobs in the system.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/blockout/blockoutjobs
 &lt;/p&gt;

 @return A Response object that contains a list of blockout jobs.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobs&amp;gt;
 &amp;lt;job&amp;gt;
 &amp;lt;groupName&amp;gt;admin&amp;lt;/groupName&amp;gt;
 &amp;lt;jobId&amp;gt;admin	BlockoutAction	1408457558636&amp;lt;/jobId&amp;gt;
 &amp;lt;jobName&amp;gt;BlockoutAction&amp;lt;/jobName&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;TIME_ZONE_PARAM&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;America/New_York&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;DURATION_PARAM&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;10080000&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;uiPassParam&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;DAILY&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;user_locale&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;en_US&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionUser&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;admin&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;ActionAdapterQuartzJob-ActionClass&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;org.pentaho.platform.scheduler2.blockout.BlockoutAction&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobParams&amp;gt;
 &amp;lt;name&amp;gt;lineage-id&amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;0989726c-3247-4864-bc79-8e2a1dc60c58&amp;lt;/value&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;/jobParams&amp;gt;
 &amp;lt;jobTrigger xsi:type=&quot;complexJobTrigger&quot;&amp;gt;
 &amp;lt;cronString&amp;gt;0 12 10 ? * 2,3,4,5,6 *&amp;lt;/cronString&amp;gt;
 &amp;lt;duration&amp;gt;10080000&amp;lt;/duration&amp;gt;
 &amp;lt;startTime&amp;gt;2014-08-19T10:12:00-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;uiPassParam&amp;gt;DAILY&amp;lt;/uiPassParam&amp;gt;
 &amp;lt;dayOfMonthRecurrences /&amp;gt;
 &amp;lt;dayOfWeekRecurrences&amp;gt;
 &amp;lt;recurrenceList&amp;gt;
 &amp;lt;values&amp;gt;2&amp;lt;/values&amp;gt;
 &amp;lt;values&amp;gt;3&amp;lt;/values&amp;gt;
 &amp;lt;values&amp;gt;4&amp;lt;/values&amp;gt;
 &amp;lt;values&amp;gt;5&amp;lt;/values&amp;gt;
 &amp;lt;values&amp;gt;6&amp;lt;/values&amp;gt;
 &amp;lt;/recurrenceList&amp;gt;
 &amp;lt;/dayOfWeekRecurrences&amp;gt;
 &amp;lt;hourlyRecurrences&amp;gt;
 &amp;lt;recurrenceList&amp;gt;
 &amp;lt;values&amp;gt;10&amp;lt;/values&amp;gt;
 &amp;lt;/recurrenceList&amp;gt;
 &amp;lt;/hourlyRecurrences&amp;gt;
 &amp;lt;minuteRecurrences&amp;gt;
 &amp;lt;recurrenceList&amp;gt;
 &amp;lt;values&amp;gt;12&amp;lt;/values&amp;gt;
 &amp;lt;/recurrenceList&amp;gt;
 &amp;lt;/minuteRecurrences&amp;gt;
 &amp;lt;monthlyRecurrences /&amp;gt;
 &amp;lt;secondRecurrences&amp;gt;
 &amp;lt;recurrenceList&amp;gt;
 &amp;lt;values&amp;gt;0&amp;lt;/values&amp;gt;
 &amp;lt;/recurrenceList&amp;gt;
 &amp;lt;/secondRecurrences&amp;gt;
 &amp;lt;yearlyRecurrences /&amp;gt;
 &amp;lt;/jobTrigger&amp;gt;
 &amp;lt;nextRun&amp;gt;2014-08-20T10:12:00-04:00&amp;lt;/nextRun&amp;gt;
 &amp;lt;state&amp;gt;NORMAL&amp;lt;/state&amp;gt;
 &amp;lt;userName&amp;gt;admin&amp;lt;/userName&amp;gt;
 &amp;lt;/job&amp;gt;
 &amp;lt;/jobs&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="job" mediaType="application/json"/><ns2:representation element="job" mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/blockout/hasblockouts"><ns2:method id="hasBlockouts" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks if there are blockouts in the system.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/blockout/hasblockouts
 &lt;/p&gt;

 @return true or false whether there are blackouts or not.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 true
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/blockout/add"><ns2:method id="addBlockout" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Creates a new blockout for scheduled jobs.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/blockout/add
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobScheduleRequest&amp;gt;
 &amp;lt;jobName&amp;gt;DAILY-1820438815:admin:7740000&amp;lt;/jobName&amp;gt;
 &amp;lt;complexJobTrigger&amp;gt;
 &amp;lt;uiPassParam&amp;gt;DAILY&amp;lt;/uiPassParam&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;1&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;2&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;3&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;4&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;5&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;startTime&amp;gt;2014-08-19T10:51:00.000-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;endTime /&amp;gt;
 &amp;lt;/complexJobTrigger&amp;gt;
 &amp;lt;inputFile&amp;gt;&amp;lt;/inputFile&amp;gt;
 &amp;lt;outputFile&amp;gt;&amp;lt;/outputFile&amp;gt;
 &amp;lt;duration&amp;gt;7740000&amp;lt;/duration&amp;gt;
 &amp;lt;timeZone&amp;gt;America/New_York&amp;lt;/timeZone&amp;gt;
 &amp;lt;/jobScheduleRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param jobScheduleRequest A JobScheduleRequest object defining the blockout job.

 @return A Response object which contains the ID of the blockout which was created.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 admin	BlockoutAction	1410786491209
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="jobScheduleRequest" mediaType="application/json"/><ns2:representation element="jobScheduleRequest" mediaType="application/xml"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/blockout/update"><ns2:method id="updateBlockout" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Update an existing blockout.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/blockout/update?jobid=admin%09BlockoutAction%091410786491209
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobScheduleRequest&amp;gt;
 &amp;lt;jobName&amp;gt;DAILY-1820438815:admin:7740000&amp;lt;/jobName&amp;gt;
 &amp;lt;complexJobTrigger&amp;gt;
 &amp;lt;uiPassParam&amp;gt;DAILY&amp;lt;/uiPassParam&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;1&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;2&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;3&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;4&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;5&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;startTime&amp;gt;2012-01-12T10:51:00.000-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;endTime /&amp;gt;
 &amp;lt;/complexJobTrigger&amp;gt;
 &amp;lt;inputFile&amp;gt;&amp;lt;/inputFile&amp;gt;
 &amp;lt;outputFile&amp;gt;&amp;lt;/outputFile&amp;gt;
 &amp;lt;duration&amp;gt;7740000&amp;lt;/duration&amp;gt;
 &amp;lt;timeZone&amp;gt;America/New_York&amp;lt;/timeZone&amp;gt;
 &amp;lt;/jobScheduleRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param jobId The jobId of the blockout we are editing.
 @param jobScheduleRequest The payload containing the definition of the blockout.

 @return A Response object which contains the ID of the blockout which was created.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 admin	BlockoutAction	1410786491503
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="jobid" style="query" type="xs:string"/><ns2:representation element="jobScheduleRequest" mediaType="application/json"/><ns2:representation element="jobScheduleRequest" mediaType="application/xml"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/blockout/willFire"><ns2:method id="blockoutWillFire" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks if the selected blockout schedule will be fired.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/blockout/willFire
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobScheduleRequest&amp;gt;
 &amp;lt;jobName&amp;gt;DAILY-1820438815:admin:7740000&amp;lt;/jobName&amp;gt;
 &amp;lt;complexJobTrigger&amp;gt;
 &amp;lt;uiPassParam&amp;gt;DAILY&amp;lt;/uiPassParam&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;1&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;2&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;3&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;4&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;5&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;startTime&amp;gt;2014-08-19T10:51:00.000-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;endTime /&amp;gt;
 &amp;lt;/complexJobTrigger&amp;gt;
 &amp;lt;inputFile&amp;gt;&amp;lt;/inputFile&amp;gt;
 &amp;lt;outputFile&amp;gt;&amp;lt;/outputFile&amp;gt;
 &amp;lt;duration&amp;gt;7740000&amp;lt;/duration&amp;gt;
 &amp;lt;timeZone&amp;gt;America/New_York&amp;lt;/timeZone&amp;gt;
 &amp;lt;/jobScheduleRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param jobScheduleRequest The payload containing the definition of the blockout.

 @return true or false indicating whether or not the blockout will fire.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 false
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="jobScheduleRequest" mediaType="application/json"/><ns2:representation element="jobScheduleRequest" mediaType="application/xml"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/blockout/blockstatus"><ns2:method id="getBlockStatus" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Check the status of the selected blockout schedule.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/scheduler/blockout/blockstatus
 &lt;/p&gt;
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;jobScheduleRequest&amp;gt;
 &amp;lt;jobName&amp;gt;DAILY-1820438815:admin:7740000&amp;lt;/jobName&amp;gt;
 &amp;lt;complexJobTrigger&amp;gt;
 &amp;lt;uiPassParam&amp;gt;DAILY&amp;lt;/uiPassParam&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;1&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;2&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;3&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;4&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;daysOfWeek&amp;gt;5&amp;lt;/daysOfWeek&amp;gt;
 &amp;lt;startTime&amp;gt;2014-08-19T10:51:00.000-04:00&amp;lt;/startTime&amp;gt;
 &amp;lt;endTime /&amp;gt;
 &amp;lt;/complexJobTrigger&amp;gt;
 &amp;lt;inputFile&amp;gt;&amp;lt;/inputFile&amp;gt;
 &amp;lt;outputFile&amp;gt;&amp;lt;/outputFile&amp;gt;
 &amp;lt;duration&amp;gt;7740000&amp;lt;/duration&amp;gt;
 &amp;lt;timeZone&amp;gt;America/New_York&amp;lt;/timeZone&amp;gt;
 &amp;lt;/jobScheduleRequest&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param jobScheduleRequest The payload containing the definition of the blockout.

 @return A Response object which contains a BlockStatusProxy which contains totallyBlocked and partiallyBlocked flags.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;blockStatusProxy&amp;gt;
 &amp;lt;partiallyBlocked&amp;gt;true&amp;lt;/partiallyBlocked&amp;gt;
 &amp;lt;totallyBlocked&amp;gt;true&amp;lt;/totallyBlocked&amp;gt;
 &amp;lt;/blockStatusProxy&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="jobScheduleRequest" mediaType="application/json"/><ns2:representation element="jobScheduleRequest" mediaType="application/xml"/></ns2:request><ns2:response><ns2:representation mediaType="application/json"/><ns2:representation mediaType="application/xml"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/generatedContentForSchedule"><ns2:method id="doGetGeneratedContentForSchedule" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of execute content by lineage id.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/scheduler/generatedContentForSchedule?lineageId=:public:Steel%20Wheels:Inventory%20List%20(report).prpt
 &lt;/p&gt;

 @param lineageId the path for the file.

 @return A list of RepositoryFileDto objects.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;List&amp;gt;
 &amp;lt;repositoryFileDto&amp;gt;
 &amp;lt;createdDate&amp;gt;1402911997019&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;3461&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;false&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/id&amp;gt;
 &amp;lt;lastModifiedDate&amp;gt;1406647160536&amp;lt;/lastModifiedDate&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;localePropertiesMapEntries&amp;gt;
 &amp;lt;localeMapDto&amp;gt;
 &amp;lt;locale&amp;gt;default&amp;lt;/locale&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;jcr:primaryType&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;nt:unstructured&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.description&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile Description&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;/localeMapDto&amp;gt;
 &amp;lt;/localePropertiesMapEntries&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;myFile.prpt&amp;lt;/name&amp;gt;&amp;lt;/name&amp;gt;
 &amp;lt;originalParentFolderPath&amp;gt;/public/admin&amp;lt;/originalParentFolderPath&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/public/admin/ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;myFile&amp;lt;/title&amp;gt;
 &amp;lt;versionId&amp;gt;1.9&amp;lt;/versionId&amp;gt;
 &amp;lt;versioned&amp;gt;true&amp;lt;/versioned&amp;gt;
 &amp;lt;/repositoryFileAclDto&amp;gt;
 &amp;lt;/List&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lineageId" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/version"><ns2:doc>This resource manages version checking capability of the platform</ns2:doc><ns2:resource path="/show"><ns2:method id="getVersion" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the current version of the platform

 @return platform's version
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/softwareUpdates"><ns2:method id="getSoftwareUpdatesDocument" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Return software update document to the user

 @return software update document
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path=""><ns2:method id="doGetRoot" name="GET"><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:resource path="docs"><ns2:method id="doGetDocs" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt;&lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/emailconfig/"><ns2:doc>Configures and manage the Email configuration in the platform</ns2:doc><ns2:resource path="/sendEmailTest"><ns2:method id="sendEmailTest" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Process the current email configuration
 @param emailConfiguration &lt;code&gt; EmailConfiguration &lt;/code&gt;
 @return
 @throws Exception
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="emailConfiguration" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/setEmailConfig"><ns2:method id="setEmailConfig" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Stores the email configuration in the platform
 @param emailConfiguration &lt;code&gt; EmailConfiguration &lt;/code&gt;
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="emailConfiguration" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/getEmailConfig"><ns2:method id="getEmailConfig" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves the email configuration
 @return emailConfiguration &lt;code&gt; EmailConfiguration &lt;/code&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/isValid"><ns2:method id="isValid" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks whether the current email configuration is valid
 @return (&quot;true&quot; or &quot;false&quot;)
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/resetEmailConfig"><ns2:method id="deleteEmailConfig" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Delete the stored email configuration from the platform.
 @param emailConfiguration &lt;code&gt; EmailConfiguration &lt;/code&gt;
 @return
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="emailConfiguration" mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource></ns2:resource><ns2:resource path="/repo/files/"><ns2:doc>This service provides methods for listing, creating, downloading, uploading, and removal of files.</ns2:doc><ns2:resource path="{pathId : .+}/rename"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doRename" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Rename the selected file.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/:jmeter-test:test_file_1.xml/rename?newName=test_file_8
 &lt;br /&gt;&lt;b&gt;PUT data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This PUT body does not contain data.
 &lt;/pre&gt;
 &lt;/p&gt;

 @param pathId  The path from the root folder to the root node of the tree to return using colon characters in place of /
 or \ characters. To clarify /path/to/file, the encoded pathId would be :path:to:file.
 @param newName String indicating the new name of the file.

 @return Response with 200 OK, if the file does not exist to be renamed the response will return 200 OK with the string &quot;File to be renamed does not exist&quot;.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="newName" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/reservedCharactersDisplay"><ns2:method id="doGetReservedCharactersDisplay" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the list of reserved characters from the repository.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/reservedCharactersDisplay
 &lt;/p&gt;

 @return List of characters that are reserved by the repository.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &quot;/, \, \t, \r, \nF&quot;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="createFile" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Creates a new file with the provided contents at a given path.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/:jmeter-test:test_file_1.xml
 &lt;br /&gt;&lt;b&gt;PUT data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This PUT body does not contain data.
 &lt;/pre&gt;
 &lt;/p&gt;

 @param pathId       The path from the root folder to the root node of the tree to return using colon characters in place of /
 or \ characters. To clarify /path/to/file, the encoded pathId would be :path:to:file.
 @param fileContents An Input Stream with the contents of the file to be created.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:method id="doGetFileOrDir" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Takes a pathId and returns a Response with the output stream based on the file located at the pathId.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml
 &lt;/p&gt;

 @param pathId Colon separated path for the repository file.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/generatedContentForSchedule"><ns2:method id="doGetGeneratedContentForSchedule" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of execute content by lineage id.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/generatedContentForSchedule?lineageId=
 &lt;/p&gt;

 @param lineageId the path for the file.

 @return list of RepositoryFileDto objects.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;List&amp;gt;
 &amp;lt;repositoryFileDto&amp;gt;
 &amp;lt;createdDate&amp;gt;1402911997019&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;3461&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;false&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/id&amp;gt;
 &amp;lt;lastModifiedDate&amp;gt;1406647160536&amp;lt;/lastModifiedDate&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;localePropertiesMapEntries&amp;gt;
 &amp;lt;localeMapDto&amp;gt;
 &amp;lt;locale&amp;gt;default&amp;lt;/locale&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;jcr:primaryType&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;nt:unstructured&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.description&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile Description&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;/localeMapDto&amp;gt;
 &amp;lt;/localePropertiesMapEntries&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;myFile.prpt&amp;lt;/name&amp;gt;&amp;lt;/name&amp;gt;
 &amp;lt;originalParentFolderPath&amp;gt;/public/admin&amp;lt;/originalParentFolderPath&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/public/admin/ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;myFile&amp;lt;/title&amp;gt;
 &amp;lt;versionId&amp;gt;1.9&amp;lt;/versionId&amp;gt;
 &amp;lt;versioned&amp;gt;true&amp;lt;/versioned&amp;gt;
 &amp;lt;/repositoryFileAclDto&amp;gt;
 &amp;lt;/List&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="lineageId" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/delete"><ns2:method id="doDeleteFiles" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Move a list of files to the user's trash folder.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/delete
 &lt;/p&gt;

 @param params Comma separated list of the files to be moved to trash folder.

 @return A jax-rs Response object with the appropriate status code, header, and body.
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/deletepermanent"><ns2:method id="doDeleteFilesPermanent" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Permanently deletes the selected list of files from the repository.

 @param params Comma separated list of the files to be deleted.

 @return Server Response indicating the success of the operation.
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/deleteLocale"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doDeleteLocale" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Delete the locale for the selected file.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/:jmeter-test:test_file_1.xml/deleteLocale?locale=ja
 &lt;br /&gt;&lt;b&gt;PUT data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This PUT body does not contain data.
 &lt;/pre&gt;
 &lt;/p&gt;

 @param pathId Colon separated path for the repository file.
 @param locale A string representations of the locale to be deleted.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="locale" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="application/xml"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/canAccessMap"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetCanAccessList" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks whether the current user has permissions to the selected files.  This can check for more than one permission at once
 but will only return true if all permissions checked are valid.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.txt/canAccessMap?permissions=1
 &lt;/p&gt;

 @param pathId      Colon separated path for the repository file.
 @param permissions Pipe separated permissions to be checked.

 @return List of permissions for the selected files.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 {&quot;setting&quot;:[{&quot;name&quot;:&quot;1&quot;,&quot;value&quot;:&quot;true&quot;}]}
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="permissions" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation element="setting" mediaType="application/xml"/><ns2:representation element="setting" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/pathsAccessList"><ns2:method id="doGetPathsAccessList" name="POST"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks whether the current user has permissions to the provided list of paths.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 POST pentaho/api/repo/files/pathsAccessList
 &lt;br /&gt;&lt;b&gt;POST data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
 &amp;lt;stringListWrapper&amp;gt;
 &amp;lt;strings&amp;gt;/public&amp;lt;/strings&amp;gt;
 &amp;lt;/stringListWrapper&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param pathsWrapper Collection of Strings containing the paths to be checked.

 @return A collection of the permission settings for the paths.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;settings&amp;gt;
 &amp;lt;setting&amp;gt;
 &amp;lt;name&amp;gt;
 /public
 &amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;
 0
 &amp;lt;/value&amp;gt;
 &amp;lt;/setting&amp;gt;
 &amp;lt;setting&amp;gt;
 &amp;lt;name&amp;gt;
 /public
 &amp;lt;/name&amp;gt;
 &amp;lt;value&amp;gt;
 1
 &amp;lt;/value&amp;gt;
 &amp;lt;/setting&amp;gt;
 &amp;lt;/settings&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="stringListWrapper" mediaType="application/xml"/><ns2:representation element="stringListWrapper" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation element="setting" mediaType="application/xml"/><ns2:representation element="setting" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/download"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetFileOrDirAsDownload" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Download the selected file or folder from the repository. In order to download file from the repository, the user needs to
 have Publish action.  How the file comes down to the user and where it is saved is system and browser dependent.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml/download?locale=de
 &lt;/p&gt;

 @param pathId          Colon separated path for the repository file.
 @param strWithManifest true or false (download file with manifest).  Defaults to true  (include manifest) if this string can't be directly
 parsed to 'false' (case sensitive).  This argument is only used if a directory is being downloaded.
 @param userAgent       A string representing the type of browser to use.  Currently only applicable if contains 'FireFox' as FireFox
 requires a header with encoding information (UTF-8) and a quoted filename, otherwise encoding information is not
 supplied and the filename is not quoted.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 Encrypted file stream
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user-agent" style="header" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="withManifest" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/inline"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetFileAsInline" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves the file from the repository as inline. This is mainly used for css and dependent files for the html
 document.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml/inline
 &lt;/p&gt;

 @param pathId Colon separated path for the repository file.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;repositoryFileAclDto&amp;gt;&amp;lt;entriesInheriting&amp;gt;true&amp;lt;/entriesInheriting&amp;gt;&amp;lt;id&amp;gt;d45d4972-989e-48d5-8bd0-f7024a77f08f&amp;lt;/id&amp;gt;&amp;lt;owner&amp;gt;admin&amp;lt;/owner&amp;gt;&amp;lt;ownerType&amp;gt;0&amp;lt;/ownerType&amp;gt;&amp;lt;/repositoryFileAclDto&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/localeProperties"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetLocaleProperties" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of locale properties for a given locale.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml/localeProperties?locale=ja
 &lt;/p&gt;

 @param pathId Colon separated path for the repository file.
 @param locale The specified locale.

 @return A list of locale properties.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;stringKeyStringValueDtoes&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;File Title&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;jcr:primaryType&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;nt:unstructured&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;File Title&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;/stringKeyStringValueDtoes&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="locale" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation element="stringKeyStringValueDto" mediaType="application/xml"/><ns2:representation element="stringKeyStringValueDto" mediaType="application/json"/></ns2:response></ns2:method><ns2:method id="doSetLocaleProperties" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Save list of locale properties for a given locale.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/:jmeter-test:test_file_1.xml/localeProperties?locale=ja
 &lt;br /&gt;&lt;b&gt;PUT data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;stringKeyStringValueDtoes&amp;gt;&amp;lt;stringKeyStringValueDto&amp;gt;&amp;lt;key&amp;gt;file.title&amp;lt;/key&amp;gt;&amp;lt;value&amp;gt;&amp;#227;&amp;#131;&amp;#129;&amp;#227;&amp;#131;&amp;#163;&amp;#227;&amp;#131;&amp;#188;&amp;#227;&amp;#131;&amp;#136;&amp;#233;&amp;#129;&amp;#184;&amp;#230;&amp;#138;&amp;#158;&amp;#227;&amp;#131;&amp;#170;&amp;#227;&amp;#130;&amp;#185;&amp;#227;&amp;#131;&amp;#136;&amp;lt;/value&amp;gt;&amp;lt;/stringKeyStringValueDto&amp;gt;&amp;lt;stringKeyStringValueDto&amp;gt;&amp;lt;key&amp;gt;jcr:primaryType&amp;lt;/key&amp;gt;&amp;lt;value&amp;gt;nt:unstructured&amp;lt;/value&amp;gt;&amp;lt;/stringKeyStringValueDto&amp;gt;&amp;lt;stringKeyStringValueDto&amp;gt;&amp;lt;key&amp;gt;file.description&amp;lt;/key&amp;gt;&amp;lt;value&amp;gt;&amp;#232;&amp;#164;&amp;#135;&amp;#230;&amp;#149;&amp;#176;&amp;#227;&amp;#129;&amp;#174;&amp;#227;&amp;#131;&amp;#129;&amp;#227;&amp;#131;&amp;#163;&amp;#227;&amp;#131;&amp;#188;&amp;#227;&amp;#131;&amp;#136;&amp;#227;&amp;#130;&amp;#191;&amp;#227;&amp;#130;&amp;#164;&amp;#227;&amp;#131;&amp;#151;&amp;#227;&amp;#130;&amp;#146;&amp;#232;&amp;#161;&amp;#168;&amp;#231;&amp;#164;&amp;#186;&amp;#227;&amp;#129;&amp;#151;&amp;#227;&amp;#129;&amp;#190;&amp;#227;&amp;#129;&amp;#153;&amp;lt;/value&amp;gt;&amp;lt;/stringKeyStringValueDto&amp;gt;&amp;lt;/stringKeyStringValueDtoes&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param pathId     Colon separated path for the repository file.
 @param locale     A string representation of the locale to set properties on.
 @param properties The list of locale properties.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="locale" style="query" type="xs:string"/><ns2:representation element="stringKeyStringValueDto" mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="application/xml"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/children"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doCopyFiles" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Copy selected list of files to a new specified location.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/{pathId}/children?mode=2
 &lt;/p&gt;

 @param pathId Colon separated path for the destination for files to be copied.
 @param mode   Default is RENAME (2) which adds a number to the end of the file name. MODE_OVERWRITE (1) will just replace existing
 or MODE_NO_OVERWRITE (3) will not copy if file exist.
 @param params Comma separated list of file ids to be copied.

 @return A jax-rs Response object with the appropriate status code, header, and body.
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="mode" style="query" type="xs:int"/><ns2:representation mediaType="text/plain"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:method id="doGetChildren" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve a list of child files from the selected repository path of the repository.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test/children
 &lt;/p&gt;

 @param pathId      The path from the root folder to the root node of the tree to return using colon characters in place of /
 or \ characters. To clarify /path/to/file, the encoded pathId would be :path:to:file.
 @param filter      Filter to be applied for search. The filter can be broken down into 3 parts; File types, Child Node
 Filter, and Member Filters. Each part is separated with a pipe (|) character.
 &lt;p/&gt;
 File Types are represented by a word phrase. This phrase is recognized as a file type phrase and processed
 accordingly. Valid File Type word phrases include &quot;FILES&quot;, &quot;FOLDERS&quot;, and &quot;FILES_FOLDERS&quot; and denote
 whether to return files, folders, or both files and folders, respectively.
 &lt;p/&gt;
 The Child Node Filter is a list of allowed names of files separated by the pipe (|) character. Each file
 name in the filter may be a full name or a partial name with one or more wildcard characters (&quot;*&quot;). The
 filter does not apply to root node.
 &lt;p/&gt;
 The Member Filter portion of the filter parameter allows the caller to specify which properties of the
 metadata to return. Member Filters start with &quot;includeMembers=&quot; or &quot;excludeMembers=&quot; followed by a list of
 comma separated field names that are to be included in, or, excluded from, the list. Valid field names can
 be found in  org.pentaho.platform.repository2.unified.webservices#RepositoryFileAdapter.
 Omission of a member filter will return all members. It is invalid to both and includeMembers= and an
 excludeMembers= clause in the same service call.
 @param showHidden  Include or exclude hidden files from the file list.
 @param includeAcls Include permission information about the file in the output.

 @return A RepositoryFileTreeDto object containing the files at the selected repository path of the repository. Will return files but not folders under the &quot;/&quot; folder. The fields returned will include the name, filesize, description, id and title.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;repositoryFileTreeDto&amp;gt;
 &amp;lt;children&amp;gt;
 &amp;lt;file&amp;gt;
 &amp;lt;createdDate&amp;gt;1405356318621&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;-1&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;true&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;fileId;/id&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;admin&amp;lt;/name&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/path/to/dir&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;admin&amp;lt;/title&amp;gt;
 &amp;lt;versioned&amp;gt;false&amp;lt;/versioned&amp;gt;
 &amp;lt;/file&amp;gt;
 &amp;lt;/children&amp;gt;
 &amp;lt;/repositoryFileTreeDto&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="filter" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="showHidden" style="query" type="xs:boolean"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="includeAcls" style="query" type="xs:boolean" default="false"/></ns2:request><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/acl"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="setFileAcls" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; This method is used to update and save the acls of the selected file to the repository.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/:jmeter-test:test_file_1.xml/acl
 &lt;br /&gt;&lt;b&gt;PUT data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;repositoryFileAclDto&amp;gt;&amp;lt;entriesInheriting&amp;gt;true&amp;lt;/entriesInheriting&amp;gt;&amp;lt;id&amp;gt;d45d4972-989e-48d5-8bd0-f7024a77f08f&amp;lt;/id&amp;gt;&amp;lt;owner&amp;gt;admin&amp;lt;/owner&amp;gt;&amp;lt;ownerType&amp;gt;0&amp;lt;/ownerType&amp;gt;&amp;lt;/repositoryFileAclDto&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param pathId Colon separated path for the repository file.
 @param acl    Acl of the repository file RepositoryFileAclDto.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="repositoryFileAclDto" mediaType="application/xml"/><ns2:representation element="repositoryFileAclDto" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method><ns2:method id="doGetFileAcl" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves the ACL settings of the requested repository file in either xml or json format.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml/acl
 &lt;/p&gt;

 @param pathId colon separated path for the repository file.

 @return RepositoryFileAclDto object containing the ACL settings of the requested file.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;repositoryFileAclDto&amp;gt;
 &amp;lt;aces&amp;gt;
 &amp;lt;modifiable&amp;gt;true&amp;lt;/modifiable&amp;gt;
 &amp;lt;permissions&amp;gt;4&amp;lt;/permissions&amp;gt;
 &amp;lt;recipient&amp;gt;admin&amp;lt;/recipient&amp;gt;
 &amp;lt;recipientType&amp;gt;0&amp;lt;/recipientType&amp;gt;
 &amp;lt;/aces&amp;gt;
 &amp;lt;aces&amp;gt;
 &amp;lt;modifiable&amp;gt;false&amp;lt;/modifiable&amp;gt;
 &amp;lt;permissions&amp;gt;4&amp;lt;/permissions&amp;gt;
 &amp;lt;recipient&amp;gt;Administrator&amp;lt;/recipient&amp;gt;
 &amp;lt;recipientType&amp;gt;1&amp;lt;/recipientType&amp;gt;
 &amp;lt;/aces&amp;gt;
 &amp;lt;entriesInheriting&amp;gt;true&amp;lt;/entriesInheriting&amp;gt;
 &amp;lt;id&amp;gt;068390ba-f90d-46e3-8c55-bbe55e24b2fe&amp;lt;/id&amp;gt;
 &amp;lt;owner&amp;gt;admin&amp;lt;/owner&amp;gt;
 &amp;lt;ownerType&amp;gt;0&amp;lt;/ownerType&amp;gt;
 &amp;lt;/repositoryFileAclDto&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="repositoryFileAclDto" mediaType="application/xml"/><ns2:representation element="repositoryFileAclDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/canAccess"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetCanAccess" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Check whether the current user has specific permission on the selected repository file.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml/canAccess?permissions=1
 &lt;/p&gt;

 @param pathId      Colon separated path for the repository file.
 @param permissions Pipe separated list of permissions.

 @return String &quot;true&quot; if the user has requested permissions on the file, or &quot;false&quot; otherwise.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 true
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="permissions" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/reservedCharacters"><ns2:method id="doGetReservedChars" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Returns the list of reserved characters from the repository.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/reservedCharacters
 &lt;/p&gt;

 @return List of characters that are reserved by the repository.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &quot;/ \&quot;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/properties"><ns2:method id="doGetRootProperties" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves the properties of the root directory.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/properties
 &lt;/p&gt;

 @return file properties object RepositoryFileDto for the root directory.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;repositoryFileDto&amp;gt;
 &amp;lt;createdDate&amp;gt;1406731649407&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;-1&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;true&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;6d93372c-4908-47af-9815-3aa6307e392c&amp;lt;/id&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name/&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/&amp;lt;/path&amp;gt;
 &amp;lt;title/&amp;gt;
 &amp;lt;versioned&amp;gt;false&amp;lt;/versioned&amp;gt;
 &amp;lt;/repositoryFileDto&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/properties"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetProperties" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves the properties of a selected repository file.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:/properties
 &lt;/p&gt;

 @param pathId Colon separated path for the repository file.

 @return A RepositoryDto object containing the properties for the given file.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 {
 &quot;createdDate&quot;:&quot;1406732545857&quot;,
 &quot;description&quot;:&quot;description&quot;,
 &quot;fileSize&quot;:&quot;1234&quot;,
 &quot;folder&quot;:&quot;false&quot;,
 &quot;hidden&quot;:&quot;false&quot;,
 &quot;id&quot;:&quot;fileId&quot;,
 &quot;lastModifiedDate&quot;:&quot;1406732545858&quot;,
 &quot;locale&quot;:&quot;en&quot;,
 &quot;localePropertiesMapEntries&quot;:[
 {
 &quot;locale&quot;:&quot;default&quot;,
 &quot;properties&quot;:[
 {&quot;key&quot;:&quot;file.title&quot;,&quot;value&quot;:&quot;afile&quot;},
 {&quot;key&quot;:&quot;description&quot;,&quot;value&quot;:&quot;afile.prpti&quot;},
 {&quot;key&quot;:&quot;jcr:primaryType&quot;,&quot;value&quot;:&quot;nt:unstructured&quot;},
 {&quot;key&quot;:&quot;title&quot;,&quot;value&quot;:&quot;afile&quot;},
 {&quot;key&quot;:&quot;file.description&quot;,&quot;value&quot;:&quot;afile.prpti&quot;}
 ]
 }
 ],
 &quot;locked&quot;:&quot;false&quot;,
 &quot;name&quot;:&quot;filename&quot;,
 &quot;ownerType&quot;:&quot;-1&quot;,&quot;path&quot;:&quot;pathToFile:filename&quot;,
 &quot;title&quot;:&quot;title&quot;,&quot;versioned&quot;:&quot;false&quot;
 }
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/canCreate"><ns2:method id="doGetCanCreate" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks the users permission to determine if that user can create new content in the repository.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/canCreate
 &lt;/p&gt;

 @return String &quot;true&quot; if the user can create new content, or &quot;false&quot; otherwise.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 true
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/creator"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetContentCreator" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves the file by creator id

 @param pathId Colon separated path for the destination for files to be copied.

 @return file properties object  RepositoryFileDto
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method><ns2:method id="doSetContentCreator" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Store content creator for the given path of created content.

 @param pathId         colon separated path for the repository file that was created by the contenCreator below
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 :path:to:file:id
 &lt;/pre&gt;
 @param contentCreator Repository file that created the file at the above pathId location
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;repositoryFileDto&amp;gt;
 &amp;lt;createdDate&amp;gt;1402911997019&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;3461&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;false&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/id&amp;gt;
 &amp;lt;lastModifiedDate&amp;gt;1406647160536&amp;lt;/lastModifiedDate&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;localePropertiesMapEntries&amp;gt;
 &amp;lt;localeMapDto&amp;gt;
 &amp;lt;locale&amp;gt;default&amp;lt;/locale&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;jcr:primaryType&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;nt:unstructured&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.description&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile Description&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;/localeMapDto&amp;gt;
 &amp;lt;/localePropertiesMapEntries&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;myFile.prpt&amp;lt;/name&amp;gt;&amp;lt;/name&amp;gt;
 &amp;lt;originalParentFolderPath&amp;gt;/public/admin&amp;lt;/originalParentFolderPath&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/public/admin/ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;myFile&amp;lt;/title&amp;gt;
 &amp;lt;versionId&amp;gt;1.9&amp;lt;/versionId&amp;gt;
 &amp;lt;versioned&amp;gt;true&amp;lt;/versioned&amp;gt;
 &amp;lt;/repositoryFileAclDto&amp;gt;
 &lt;/pre&gt;
 @return A jax-rs Response object with the appropriate status code, header, and body.
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/deleted"><ns2:method id="doGetDeletedFiles" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of files in the user's trash folder.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/deleted
 &lt;/p&gt;

 @return A list of RepositoryDto objects containing the files in the trash folder of the repository.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;repositoryFileDtoes&amp;gt;
 &amp;lt;repositoryFileDto&amp;gt;
 &amp;lt;createdDate&amp;gt;1405356406448&amp;lt;/createdDate&amp;gt;
 &amp;lt;deletedDate&amp;gt;1406573914167&amp;lt;/deletedDate&amp;gt;
 &amp;lt;fileSize&amp;gt;10477&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;false&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;fileId&amp;lt;/id&amp;gt;
 &amp;lt;lastModifiedDate&amp;gt;1405356406448&amp;lt;/lastModifiedDate&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;localePropertiesMapEntries&amp;gt;
 &amp;lt;locale&amp;gt;default&amp;lt;/locale&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;key&amp;gt;file.title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;File Title&amp;lt;/value&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;key&amp;gt;jcr:primaryType&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;nt:unstructured&amp;lt;/value&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;key&amp;gt;title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;filename&amp;lt;/value&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;key&amp;gt;file.description&amp;lt;/key&amp;gt;
 &amp;lt;value /&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;/localePropertiesMapEntries&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;filename.ext&amp;lt;/name&amp;gt;
 &amp;lt;originalParentFolderPath&amp;gt;/original/path/to/file&amp;lt;/originalParentFolderPath&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/path/to/file&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;File Title&amp;lt;/title&amp;gt;
 &amp;lt;versionId&amp;gt;1.3&amp;lt;/versionId&amp;gt;
 &amp;lt;versioned&amp;gt;true&amp;lt;/versioned&amp;gt;
 &amp;lt;/repositoryFileDto&amp;gt;
 &amp;lt;/repositoryFileDtoes&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/metadata"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetMetadata" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the metadata of the selected file. Even though the hidden flag is a property of the file node itself, and not
 the metadata child, it is considered metadata from PUC and is included in the setMetadata call.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml/metadata
 &lt;/p&gt;

 @param pathId The path from the root folder to the root node of the tree to return using colon characters in place of /
 or \ characters. To clarify /path/to/file, the encoded pathId would be :path:to:file.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;stringKeyStringValueDtos&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;KEY&amp;lt;key&amp;gt;
 &amp;lt;value&amp;gt;KEY&amp;lt;value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;/stringKeyStringValueDtos&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="stringKeyStringValueDto" mediaType="application/json"/></ns2:response></ns2:method><ns2:method id="doSetMetadata" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Store the metadata of the selected file. Even though the hidden flag is a property of the file node itself, and not
 the metadata child, it is considered metadata from PUC and is included in the setMetadata call.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/:jmeter-test:test_file_1.xml/metadata
 &lt;br /&gt;&lt;b&gt;PUT data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&amp;lt;stringKeyStringValueDtoes&amp;gt;&amp;lt;stringKeyStringValueDto&amp;gt;&amp;lt;key&amp;gt;metadata.key.1&amp;lt;/key&amp;gt;&amp;lt;value&amp;gt;metadata.value.1&amp;lt;/value&amp;gt;&amp;lt;/stringKeyStringValueDto&amp;gt;&amp;lt;/stringKeyStringValueDtoes&amp;gt;
 &lt;/pre&gt;
 &lt;/p&gt;

 @param pathId   The path from the root folder to the root node of the tree to return using colon characters in place of /
 or \ characters. To clarify /path/to/file, the encoded pathId would be :path:to:file.
 @param metadata A list of StringKeyStringValueDto objects.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation element="stringKeyStringValueDto" mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="application/xml"/><ns2:representation mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/locales"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetFileLocales" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieves the list of locale maps for the selected repository file.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml/locales
 &lt;/p&gt;

 @param pathId Colon separated path for the repository file.

 @return List&lt;LocaleMapDto&gt; the list of locales.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;localePropertiesMapEntries&amp;gt;
 &amp;lt;localeMapDto&amp;gt;
 &amp;lt;locale&amp;gt;default&amp;lt;/locale&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;jcr:primaryType&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;nt:unstructured&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.description&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile Description&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;/localeMapDto&amp;gt;
 &amp;lt;/localePropertiesMapEntries&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="localeMapDto" mediaType="application/xml"/><ns2:representation element="localeMapDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/tree"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetTree" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the recursive list of children of the selected repository file.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:public/tree?showHidden=false&amp;filter=*|FILES&amp;_=1389042244670
 &lt;/p&gt;

 @param pathId      The path from the root folder to the root node of the tree to return using colon characters in place of /
 or \ characters. To clarify /path/to/file, the encoded pathId would be :path:to:file.
 @param depth       How many level should the search go.
 @param filter      Filter to be applied for search. The filter can be broken down into 3 parts; File types, Child Node
 Filter, and Member Filters. Each part is separated with a pipe (|) character.
 &lt;p/&gt;
 File Types are represented by a word phrase. This phrase is recognized as a file type phrase and processed
 accordingly. Valid File Type word phrases include &quot;FILES&quot;, &quot;FOLDERS&quot;, and &quot;FILES_FOLDERS&quot; and denote
 whether to return files, folders, or both files and folders, respectively.
 &lt;p/&gt;
 The Child Node Filter is a list of allowed names of files separated by the pipe (|) character. Each file
 name in the filter may be a full name or a partial name with one or more wildcard characters (&quot;*&quot;). The
 filter does not apply to root node.
 &lt;p/&gt;
 The Member Filter portion of the filter parameter allows the caller to specify which properties of the
 metadata to return. Member Filters start with &quot;includeMembers=&quot; or &quot;excludeMembers=&quot; followed by a list of
 comma separated field names that are to be included in, or, excluded from, the list. Valid field names can
 be found in  org.pentaho.platform.repository2.unified.webservices#RepositoryFileAdapter.
 Omission of a member filter will return all members. It is invalid to both and includeMembers= and an
 excludeMembers= clause in the same service call.
 @param showHidden  Include or exclude hidden files from the file list.
 @param includeAcls Include permission information about the file in the output.

 @return A RepositoryFileTreeDto object containing the files at the root of the repository. Will return files but not folders under the &quot;/&quot; folder. The fields returned will include the name, filesize, description, id and title.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;repositoryFileTreeDto&amp;gt;
 &amp;lt;children&amp;gt;
 &amp;lt;file&amp;gt;
 &amp;lt;createdDate&amp;gt;1405356318621&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;-1&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;true&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;fileId;/id&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;admin&amp;lt;/name&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/path/to/dir&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;admin&amp;lt;/title&amp;gt;
 &amp;lt;versioned&amp;gt;false&amp;lt;/versioned&amp;gt;
 &amp;lt;/file&amp;gt;
 &amp;lt;/children&amp;gt;
 &amp;lt;/repositoryFileTreeDto&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="depth" style="query" type="xs:int"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="filter" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="showHidden" style="query" type="xs:boolean"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="includeAcls" style="query" type="xs:boolean" default="false"/></ns2:request><ns2:response><ns2:representation element="repositoryFileTreeDto" mediaType="application/xml"/><ns2:representation element="repositoryFileTreeDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/generatedContent"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetGeneratedContent" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the list of executed contents for a selected content from the repository.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml/generatedContent?locale=de
 &lt;/p&gt;

 @param pathId Colon separated path for the destination for files to be copied.

 @return A list of RepositoryDto objects containing the executed contents for a selected content from the repository.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;List&amp;gt;
 &amp;lt;repositoryFileDto&amp;gt;
 &amp;lt;createdDate&amp;gt;1402911997019&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;3461&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;false&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/id&amp;gt;
 &amp;lt;lastModifiedDate&amp;gt;1406647160536&amp;lt;/lastModifiedDate&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;localePropertiesMapEntries&amp;gt;
 &amp;lt;localeMapDto&amp;gt;
 &amp;lt;locale&amp;gt;default&amp;lt;/locale&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;jcr:primaryType&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;nt:unstructured&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.description&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile Description&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;/localeMapDto&amp;gt;
 &amp;lt;/localePropertiesMapEntries&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;myFile.prpt&amp;lt;/name&amp;gt;&amp;lt;/name&amp;gt;
 &amp;lt;originalParentFolderPath&amp;gt;/public/admin&amp;lt;/originalParentFolderPath&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/public/admin/ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;myFile&amp;lt;/title&amp;gt;
 &amp;lt;versionId&amp;gt;1.9&amp;lt;/versionId&amp;gt;
 &amp;lt;versioned&amp;gt;true&amp;lt;/versioned&amp;gt;
 &amp;lt;/repositoryFileAclDto&amp;gt;
 &amp;lt;/List&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/generatedContentForUser"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doGetGeneratedContentForUser" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the executed contents for a selected repository file and a given user.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/:jmeter-test:test_file_1.xml/generatedContentForUser?user=admin
 &lt;/p&gt;

 @param pathId Colon separated path for the destination for files to be copied.
 @param user   The username for the generated content folder.

 @return A list of RepositoryDto objects containing the executed contents for a selected file from the repository.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;List&amp;gt;
 &amp;lt;repositoryFileDto&amp;gt;
 &amp;lt;createdDate&amp;gt;1402911997019&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;3461&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;false&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/id&amp;gt;
 &amp;lt;lastModifiedDate&amp;gt;1406647160536&amp;lt;/lastModifiedDate&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;localePropertiesMapEntries&amp;gt;
 &amp;lt;localeMapDto&amp;gt;
 &amp;lt;locale&amp;gt;default&amp;lt;/locale&amp;gt;
 &amp;lt;properties&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;jcr:primaryType&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;nt:unstructured&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;title&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;stringKeyStringValueDto&amp;gt;
 &amp;lt;key&amp;gt;file.description&amp;lt;/key&amp;gt;
 &amp;lt;value&amp;gt;myFile Description&amp;lt;/value&amp;gt;
 &amp;lt;/stringKeyStringValueDto&amp;gt;
 &amp;lt;/properties&amp;gt;
 &amp;lt;/localeMapDto&amp;gt;
 &amp;lt;/localePropertiesMapEntries&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;myFile.prpt&amp;lt;/name&amp;gt;&amp;lt;/name&amp;gt;
 &amp;lt;originalParentFolderPath&amp;gt;/public/admin&amp;lt;/originalParentFolderPath&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/public/admin/ff11ac89-7eda-4c03-aab1-e27f9048fd38&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;myFile&amp;lt;/title&amp;gt;
 &amp;lt;versionId&amp;gt;1.9&amp;lt;/versionId&amp;gt;
 &amp;lt;versioned&amp;gt;true&amp;lt;/versioned&amp;gt;
 &amp;lt;/repositoryFileAclDto&amp;gt;
 &amp;lt;/List&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="user" style="query" type="xs:string"/></ns2:request><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/move"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doMove" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Moves a list of files from its current location to another.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/{pathId}/move
 &lt;/p&gt;

 @param destPathId Colon separated path for the destination path.
 @param params     Comma separated list of files to be moved.

 @return A jax-rs Response object with the appropriate status code, header, and body.
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/restore"><ns2:method id="doRestore" name="PUT"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Restores a list of files from the user's trash folder to their previous locations.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/restore
 &lt;/p&gt;

 @param params comma separated list of file ids to be restored.

 @return A jax-rs Response object with the appropriate status code, header, and body.
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:representation mediaType="*/*"/></ns2:request><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/parameterizable"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doIsParameterizable" name="GET"><ns2:doc>&lt;supported&gt;false&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Determines whether a selected file supports parameters or not

 @param pathId Colon separated path for the repository file.

 @return (&quot;true&quot; or &quot;false&quot;)
 @throws FileNotFoundException
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/canAdminister"><ns2:method id="doGetCanAdminister" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Checks to see if the current user is an administer of the platform and returns a boolean response.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/canAdminister
 &lt;/p&gt;

 @return String &quot;true&quot; if the user can administer the platform, or &quot;false&quot; otherwise.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 true
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="text/plain"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/tree"><ns2:method id="doGetRootTree" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve the recursive list of files from root of the repository based on the filters provided.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/tree?showHidden=false&amp;filter=*|FILES&amp;_=1389042244670
 &lt;/p&gt;

 @param depth      How many level should the search go.
 @param filter     Filter to be applied for search. The filter can be broken down into 3 parts; File types, Child Node
 Filter, and Member Filters. Each part is separated with a pipe (|) character.
 &lt;p/&gt;
 File Types are represented by a word phrase. This phrase is recognized as a file type phrase and processed
 accordingly. Valid File Type word phrases include &quot;FILES&quot;, &quot;FOLDERS&quot;, and &quot;FILES_FOLDERS&quot; and denote
 whether to return files, folders, or both files and folders, respectively.
 &lt;p/&gt;
 The Child Node Filter is a list of allowed names of files separated by the pipe (|) character. Each file
 name in the filter may be a full name or a partial name with one or more wildcard characters (&quot;*&quot;). The
 filter does not apply to root node.
 &lt;p/&gt;
 The Member Filter portion of the filter parameter allows the caller to specify which properties of the
 metadata to return. Member Filters start with &quot;includeMembers=&quot; or &quot;excludeMembers=&quot; followed by a list of
 comma separated field names that are to be included in, or, excluded from, the list. Valid field names can
 be found in org.pentaho.platform.repository2.unified.webservices#RepositoryFileAdapter.
 Omission of a member filter will return all members. It is invalid to both and includeMembers= and an
 excludeMembers= clause in the same service call.
 @param showHidden Include or exclude hidden files from the file list.

 @return A RepositoryFileTreeDto object containing the files at the root of the repository. Will return files but not folders under the &quot;/&quot; folder. The fields returned will include the name, filesize, description, id and title.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;repositoryFileTreeDto&amp;gt;
 &amp;lt;children&amp;gt;
 &amp;lt;file&amp;gt;
 &amp;lt;createdDate&amp;gt;1405356318621&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;-1&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;true&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;fileId;/id&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;admin&amp;lt;/name&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/path/to/dir&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;admin&amp;lt;/title&amp;gt;
 &amp;lt;versioned&amp;gt;false&amp;lt;/versioned&amp;gt;
 &amp;lt;/file&amp;gt;
 &amp;lt;/children&amp;gt;
 &amp;lt;/repositoryFileTreeDto&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="depth" style="query" type="xs:int"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="filter" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="showHidden" style="query" type="xs:boolean"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="includeAcls" style="query" type="xs:boolean" default="false"/></ns2:request><ns2:response><ns2:representation element="repositoryFileTreeDto" mediaType="application/xml"/><ns2:representation element="repositoryFileTreeDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="/children"><ns2:method id="doGetRootChildren" name="GET"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Retrieve a list of child files from the root of the repository.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 GET pentaho/api/repo/files/children?showHidden=false&amp;filter=*|FILES&amp;_=1389042244670
 &lt;/p&gt;

 @param filter      Filter to be applied for search. The filter can be broken down into 3 parts; File types, Child Node
 Filter, and Member Filters. Each part is separated with a pipe (|) character.
 &lt;p/&gt;
 File Types are represented by a word phrase. This phrase is recognized as a file type phrase and processed
 accordingly. Valid File Type word phrases include &quot;FILES&quot;, &quot;FOLDERS&quot;, and &quot;FILES_FOLDERS&quot; and denote
 whether to return files, folders, or both files and folders, respectively.
 &lt;p/&gt;
 The Child Node Filter is a list of allowed names of files separated by the pipe (|) character. Each file
 name in the filter may be a full name or a partial name with one or more wildcard characters (&quot;*&quot;). The
 filter does not apply to root node.
 &lt;p/&gt;
 The Member Filter portion of the filter parameter allows the caller to specify which properties of the
 metadata to return. Member Filters start with &quot;includeMembers=&quot; or &quot;excludeMembers=&quot; followed by a list of
 comma separated field names that are to be included in, or, excluded from, the list. Valid field names can
 be found in  org.pentaho.platform.repository2.unified.webservices#RepositoryFileAdapter.
 Omission of a member filter will return all members. It is invalid to both and includeMembers= and an
 excludeMembers= clause in the same service call.
 @param showHidden  Include or exclude hidden files from the file list.
 @param includeAcls Include permission information about the file in the output.

 @return A RepositoryFileTreeDto object containing the files at the root of the repository. Will return files but not folders under the &quot;/&quot; folder. The fields returned will include the name, filesize, description, id and title.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 &amp;lt;repositoryFileTreeDto&amp;gt;
 &amp;lt;children&amp;gt;
 &amp;lt;file&amp;gt;
 &amp;lt;createdDate&amp;gt;1405356318621&amp;lt;/createdDate&amp;gt;
 &amp;lt;fileSize&amp;gt;-1&amp;lt;/fileSize&amp;gt;
 &amp;lt;folder&amp;gt;true&amp;lt;/folder&amp;gt;
 &amp;lt;hidden&amp;gt;false&amp;lt;/hidden&amp;gt;
 &amp;lt;id&amp;gt;fileId;/id&amp;gt;
 &amp;lt;locale&amp;gt;en&amp;lt;/locale&amp;gt;
 &amp;lt;locked&amp;gt;false&amp;lt;/locked&amp;gt;
 &amp;lt;name&amp;gt;admin&amp;lt;/name&amp;gt;
 &amp;lt;ownerType&amp;gt;-1&amp;lt;/ownerType&amp;gt;
 &amp;lt;path&amp;gt;/path/to/dir&amp;lt;/path&amp;gt;
 &amp;lt;title&amp;gt;admin&amp;lt;/title&amp;gt;
 &amp;lt;versioned&amp;gt;false&amp;lt;/versioned&amp;gt;
 &amp;lt;/file&amp;gt;
 &amp;lt;/children&amp;gt;
 &amp;lt;/repositoryFileTreeDto&amp;gt;
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:request><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="filter" style="query" type="xs:string"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="showHidden" style="query" type="xs:boolean"/><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="includeAcls" style="query" type="xs:boolean" default="false"/></ns2:request><ns2:response><ns2:representation element="repositoryFileDto" mediaType="application/xml"/><ns2:representation element="repositoryFileDto" mediaType="application/json"/></ns2:response></ns2:method></ns2:resource><ns2:resource path="{pathId : .+}/createDir"><ns2:param xmlns:xs="http://www.w3.org/2001/XMLSchema" name="pathId" style="template" type="xs:string"/><ns2:method id="doCreateDirs" name="PUT"><ns2:doc>&lt;supported&gt;true&lt;/supported&gt;&lt;deprecated&gt;false&lt;/deprecated&gt;&lt;documentation&gt; Creates a new folder with the specified name.

 &lt;p&gt;&lt;b&gt;Example Request:&lt;/b&gt;&lt;br /&gt;
 PUT pentaho/api/repo/files/:public:jmeter-test-dir/createDir
 &lt;br /&gt;&lt;b&gt;PUT data:&lt;/b&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This PUT body does not contain data.
 &lt;/pre&gt;
 &lt;/p&gt;

 @param pathId The path from the root folder to the root node of the tree to return using colon characters in
 place of / or \ characters. To clarify /path/to/file, the encoded pathId would be :path:to:file.

 @return A jax-rs Response object with the appropriate status code, header, and body.

 &lt;p&gt;&lt;b&gt;Example Response:&lt;/b&gt;&lt;/p&gt;
 &lt;pre function=&quot;syntax.xml&quot;&gt;
 This response does not contain data.
 &lt;/pre&gt;
 &lt;/documentation&gt;</ns2:doc><ns2:response><ns2:representation mediaType="*/*"/></ns2:response></ns2:method></ns2:resource></ns2:resource></ns2:resources></ns2:application>
